[Deploy to EC2 via ECR/build-and-deploy] ‚≠ê Run Set up job
[Deploy to EC2 via ECR/build-and-deploy] üöÄ  Start image=catthehacker/***:act-latest
[Deploy to EC2 via ECR/build-and-deploy]   üê≥  docker pull image=catthehacker/***:act-latest platform= username= forcePull=true
[Deploy to EC2 via ECR/build-and-deploy]   üê≥  docker create image=catthehacker/***:act-latest platform= entrypoint=["tail" "-f" "/dev/null"] cmd=[] network="host"
[Deploy to EC2 via ECR/build-and-deploy]   üê≥  docker run image=catthehacker/***:act-latest platform= entrypoint=["tail" "-f" "/dev/null"] cmd=[] network="host"
[Deploy to EC2 via ECR/build-and-deploy]   üê≥  docker exec cmd=[node --no-warnings -e console.log(process.execPath)] user= workdir=
[Deploy to EC2 via ECR/build-and-deploy]   ‚úÖ  Success - Set up job
[Deploy to EC2 via ECR/build-and-deploy]   ‚òÅ  git clone 'https://github.com/actions/setup-python' # ref=v5
[Deploy to EC2 via ECR/build-and-deploy]   ‚òÅ  git clone 'https://github.com/aws-actions/configure-aws-credentials' # ref=v4
[Deploy to EC2 via ECR/build-and-deploy]   ‚òÅ  git clone 'https://github.com/aws-actions/amazon-ecr-login' # ref=v2
[Deploy to EC2 via ECR/build-and-deploy]   ‚òÅ  git clone 'https://github.com/appleboy/ssh-action' # ref=v1.2.0
[Deploy to EC2 via ECR/build-and-deploy] ‚≠ê Run Pre SSH deploy to EC2
[Deploy to EC2 via ECR/build-and-deploy]   ‚úÖ  Success - Pre SSH deploy to EC2 [26.400792ms]
[Deploy to EC2 via ECR/build-and-deploy] ‚≠ê Run Main actions/checkout@v4
[Deploy to EC2 via ECR/build-and-deploy]   üê≥  docker cp src=/Users/ychen745/Projects/TSE/. dst=/Users/ychen745/Projects/TSE
[Deploy to EC2 via ECR/build-and-deploy]   ‚úÖ  Success - Main actions/checkout@v4 [81.752208ms]
[Deploy to EC2 via ECR/build-and-deploy] ‚≠ê Run Main actions/setup-python@v5
[Deploy to EC2 via ECR/build-and-deploy]   üê≥  docker cp src=/Users/ychen745/.cache/act/actions-setup-python@v5/ dst=/var/run/act/actions/actions-setup-python@v5/
[Deploy to EC2 via ECR/build-and-deploy]   üê≥  docker exec cmd=[/opt/acttoolcache/node/18.20.8/arm64/bin/node /var/run/act/actions/actions-setup-python@v5/dist/setup/index.js] user= workdir=
[Deploy to EC2 via ECR/build-and-deploy]   ‚ùì  ::group::Installed versions
[Deploy to EC2 via ECR/build-and-deploy]   | Successfully set up CPython (3.13.7)
[Deploy to EC2 via ECR/build-and-deploy]   ‚ùì  ::endgroup::
[Deploy to EC2 via ECR/build-and-deploy]   ‚ùì add-matcher /run/act/actions/actions-setup-python@v5/.github/python.json
[Deploy to EC2 via ECR/build-and-deploy]   ‚úÖ  Success - Main actions/setup-python@v5 [969.283916ms]
[Deploy to EC2 via ECR/build-and-deploy]   ‚öô  ::set-env:: pythonLocation=/opt/hostedtoolcache/Python/3.13.7/arm64
[Deploy to EC2 via ECR/build-and-deploy]   ‚öô  ::set-env:: PKG_CONFIG_PATH=/opt/hostedtoolcache/Python/3.13.7/arm64/lib/pkgconfig
[Deploy to EC2 via ECR/build-and-deploy]   ‚öô  ::set-env:: Python_ROOT_DIR=/opt/hostedtoolcache/Python/3.13.7/arm64
[Deploy to EC2 via ECR/build-and-deploy]   ‚öô  ::set-env:: Python2_ROOT_DIR=/opt/hostedtoolcache/Python/3.13.7/arm64
[Deploy to EC2 via ECR/build-and-deploy]   ‚öô  ::set-env:: Python3_ROOT_DIR=/opt/hostedtoolcache/Python/3.13.7/arm64
[Deploy to EC2 via ECR/build-and-deploy]   ‚öô  ::set-env:: LD_LIBRARY_PATH=/opt/hostedtoolcache/Python/3.13.7/arm64/lib
[Deploy to EC2 via ECR/build-and-deploy]   ‚öô  ::set-output:: python-version=3.13.7
[Deploy to EC2 via ECR/build-and-deploy]   ‚öô  ::set-output:: python-path=/opt/hostedtoolcache/Python/3.13.7/arm64/bin/python
[Deploy to EC2 via ECR/build-and-deploy]   ‚öô  ::add-path:: /opt/hostedtoolcache/Python/3.13.7/arm64
[Deploy to EC2 via ECR/build-and-deploy]   ‚öô  ::add-path:: /opt/hostedtoolcache/Python/3.13.7/arm64/bin
[Deploy to EC2 via ECR/build-and-deploy] ‚≠ê Run Main Run tests
[Deploy to EC2 via ECR/build-and-deploy]   üê≥  docker exec cmd=[bash -e /var/run/act/workflow/2] user= workdir=
[Deploy to EC2 via ECR/build-and-deploy]   | Requirement already satisfied: pip in /opt/hostedtoolcache/Python/3.13.7/arm64/lib/python3.13/site-packages (25.2)
[Deploy to EC2 via ECR/build-and-deploy]   | WARNING: Running pip as the 'root' user can result in broken permissions and conflicting behaviour with the system package manager, possibly rendering your system unusable. It is recommended to use a virtual environment instead: https://pip.pypa.io/warnings/venv. Use the --root-user-action option if you know what you are doing and want to suppress this warning.
[Deploy to EC2 via ECR/build-and-deploy]   | Requirement already satisfied: annotated-types==0.7.0 in /opt/hostedtoolcache/Python/3.13.7/arm64/lib/python3.13/site-packages (from -r requirements.txt (line 1)) (0.7.0)
[Deploy to EC2 via ECR/build-and-deploy]   | Requirement already satisfied: anyio==4.10.0 in /opt/hostedtoolcache/Python/3.13.7/arm64/lib/python3.13/site-packages (from -r requirements.txt (line 2)) (4.10.0)
[Deploy to EC2 via ECR/build-and-deploy]   | Requirement already satisfied: backtrader==1.9.78.123 in /opt/hostedtoolcache/Python/3.13.7/arm64/lib/python3.13/site-packages (from -r requirements.txt (line 3)) (1.9.78.123)
[Deploy to EC2 via ECR/build-and-deploy]   | Requirement already satisfied: beautifulsoup4==4.13.5 in /opt/hostedtoolcache/Python/3.13.7/arm64/lib/python3.13/site-packages (from -r requirements.txt (line 4)) (4.13.5)
[Deploy to EC2 via ECR/build-and-deploy]   | Requirement already satisfied: bleach==6.2.0 in /opt/hostedtoolcache/Python/3.13.7/arm64/lib/python3.13/site-packages (from -r requirements.txt (line 5)) (6.2.0)
[Deploy to EC2 via ECR/build-and-deploy]   | Requirement already satisfied: blinker==1.9.0 in /opt/hostedtoolcache/Python/3.13.7/arm64/lib/python3.13/site-packages (from -r requirements.txt (line 6)) (1.9.0)
[Deploy to EC2 via ECR/build-and-deploy]   | Requirement already satisfied: certifi==2025.8.3 in /opt/hostedtoolcache/Python/3.13.7/arm64/lib/python3.13/site-packages (from -r requirements.txt (line 7)) (2025.8.3)
[Deploy to EC2 via ECR/build-and-deploy]   | Requirement already satisfied: cffi==2.0.0 in /opt/hostedtoolcache/Python/3.13.7/arm64/lib/python3.13/site-packages (from -r requirements.txt (line 8)) (2.0.0)
[Deploy to EC2 via ECR/build-and-deploy]   | Requirement already satisfied: charset-normalizer==3.4.3 in /opt/hostedtoolcache/Python/3.13.7/arm64/lib/python3.13/site-packages (from -r requirements.txt (line 9)) (3.4.3)
[Deploy to EC2 via ECR/build-and-deploy]   | Requirement already satisfied: click==8.2.1 in /opt/hostedtoolcache/Python/3.13.7/arm64/lib/python3.13/site-packages (from -r requirements.txt (line 10)) (8.2.1)
[Deploy to EC2 via ECR/build-and-deploy]   | Requirement already satisfied: contourpy==1.3.3 in /opt/hostedtoolcache/Python/3.13.7/arm64/lib/python3.13/site-packages (from -r requirements.txt (line 11)) (1.3.3)
[Deploy to EC2 via ECR/build-and-deploy]   | Requirement already satisfied: curl_cffi==0.13.0 in /opt/hostedtoolcache/Python/3.13.7/arm64/lib/python3.13/site-packages (from -r requirements.txt (line 12)) (0.13.0)
[Deploy to EC2 via ECR/build-and-deploy]   | Requirement already satisfied: cycler==0.12.1 in /opt/hostedtoolcache/Python/3.13.7/arm64/lib/python3.13/site-packages (from -r requirements.txt (line 13)) (0.12.1)
[Deploy to EC2 via ECR/build-and-deploy]   | Requirement already satisfied: distro==1.9.0 in /opt/hostedtoolcache/Python/3.13.7/arm64/lib/python3.13/site-packages (from -r requirements.txt (line 14)) (1.9.0)
[Deploy to EC2 via ECR/build-and-deploy]   | Requirement already satisfied: Flask==3.1.2 in /opt/hostedtoolcache/Python/3.13.7/arm64/lib/python3.13/site-packages (from -r requirements.txt (line 15)) (3.1.2)
[Deploy to EC2 via ECR/build-and-deploy]   | Requirement already satisfied: fonttools==4.59.2 in /opt/hostedtoolcache/Python/3.13.7/arm64/lib/python3.13/site-packages (from -r requirements.txt (line 16)) (4.59.2)
[Deploy to EC2 via ECR/build-and-deploy]   | Requirement already satisfied: frozendict==2.4.6 in /opt/hostedtoolcache/Python/3.13.7/arm64/lib/python3.13/site-packages (from -r requirements.txt (line 17)) (2.4.6)
[Deploy to EC2 via ECR/build-and-deploy]   | Requirement already satisfied: gunicorn==23.0.0 in /opt/hostedtoolcache/Python/3.13.7/arm64/lib/python3.13/site-packages (from -r requirements.txt (line 18)) (23.0.0)
[Deploy to EC2 via ECR/build-and-deploy]   | Requirement already satisfied: h11==0.16.0 in /opt/hostedtoolcache/Python/3.13.7/arm64/lib/python3.13/site-packages (from -r requirements.txt (line 19)) (0.16.0)
[Deploy to EC2 via ECR/build-and-deploy]   | Requirement already satisfied: httpcore==1.0.9 in /opt/hostedtoolcache/Python/3.13.7/arm64/lib/python3.13/site-packages (from -r requirements.txt (line 20)) (1.0.9)
[Deploy to EC2 via ECR/build-and-deploy]   | Requirement already satisfied: httpx==0.28.1 in /opt/hostedtoolcache/Python/3.13.7/arm64/lib/python3.13/site-packages (from -r requirements.txt (line 21)) (0.28.1)
[Deploy to EC2 via ECR/build-and-deploy]   | Requirement already satisfied: idna==3.10 in /opt/hostedtoolcache/Python/3.13.7/arm64/lib/python3.13/site-packages (from -r requirements.txt (line 22)) (3.10)
[Deploy to EC2 via ECR/build-and-deploy]   | Requirement already satisfied: itsdangerous==2.2.0 in /opt/hostedtoolcache/Python/3.13.7/arm64/lib/python3.13/site-packages (from -r requirements.txt (line 23)) (2.2.0)
[Deploy to EC2 via ECR/build-and-deploy]   | Requirement already satisfied: Jinja2==3.1.6 in /opt/hostedtoolcache/Python/3.13.7/arm64/lib/python3.13/site-packages (from -r requirements.txt (line 24)) (3.1.6)
[Deploy to EC2 via ECR/build-and-deploy]   | Requirement already satisfied: jiter==0.10.0 in /opt/hostedtoolcache/Python/3.13.7/arm64/lib/python3.13/site-packages (from -r requirements.txt (line 25)) (0.10.0)
[Deploy to EC2 via ECR/build-and-deploy]   | Requirement already satisfied: jsonpatch==1.33 in /opt/hostedtoolcache/Python/3.13.7/arm64/lib/python3.13/site-packages (from -r requirements.txt (line 26)) (1.33)
[Deploy to EC2 via ECR/build-and-deploy]   | Requirement already satisfied: jsonpointer==3.0.0 in /opt/hostedtoolcache/Python/3.13.7/arm64/lib/python3.13/site-packages (from -r requirements.txt (line 27)) (3.0.0)
[Deploy to EC2 via ECR/build-and-deploy]   | Requirement already satisfied: kiwisolver==1.4.9 in /opt/hostedtoolcache/Python/3.13.7/arm64/lib/python3.13/site-packages (from -r requirements.txt (line 28)) (1.4.9)
[Deploy to EC2 via ECR/build-and-deploy]   | Requirement already satisfied: langchain==0.3.27 in /opt/hostedtoolcache/Python/3.13.7/arm64/lib/python3.13/site-packages (from -r requirements.txt (line 29)) (0.3.27)
[Deploy to EC2 via ECR/build-and-deploy]   | Requirement already satisfied: langchain-core==0.3.75 in /opt/hostedtoolcache/Python/3.13.7/arm64/lib/python3.13/site-packages (from -r requirements.txt (line 30)) (0.3.75)
[Deploy to EC2 via ECR/build-and-deploy]   | Requirement already satisfied: langchain-openai==0.3.32 in /opt/hostedtoolcache/Python/3.13.7/arm64/lib/python3.13/site-packages (from -r requirements.txt (line 31)) (0.3.32)
[Deploy to EC2 via ECR/build-and-deploy]   | Requirement already satisfied: langchain-text-splitters==0.3.11 in /opt/hostedtoolcache/Python/3.13.7/arm64/lib/python3.13/site-packages (from -r requirements.txt (line 32)) (0.3.11)
[Deploy to EC2 via ECR/build-and-deploy]   | Requirement already satisfied: langsmith==0.4.25 in /opt/hostedtoolcache/Python/3.13.7/arm64/lib/python3.13/site-packages (from -r requirements.txt (line 33)) (0.4.25)
[Deploy to EC2 via ECR/build-and-deploy]   | Requirement already satisfied: Markdown==3.9 in /opt/hostedtoolcache/Python/3.13.7/arm64/lib/python3.13/site-packages (from -r requirements.txt (line 34)) (3.9)
[Deploy to EC2 via ECR/build-and-deploy]   | Requirement already satisfied: MarkupSafe==3.0.2 in /opt/hostedtoolcache/Python/3.13.7/arm64/lib/python3.13/site-packages (from -r requirements.txt (line 35)) (3.0.2)
[Deploy to EC2 via ECR/build-and-deploy]   | Requirement already satisfied: matplotlib==3.10.6 in /opt/hostedtoolcache/Python/3.13.7/arm64/lib/python3.13/site-packages (from -r requirements.txt (line 36)) (3.10.6)
[Deploy to EC2 via ECR/build-and-deploy]   | Requirement already satisfied: multitasking==0.0.12 in /opt/hostedtoolcache/Python/3.13.7/arm64/lib/python3.13/site-packages (from -r requirements.txt (line 37)) (0.0.12)
[Deploy to EC2 via ECR/build-and-deploy]   | Requirement already satisfied: numpy==2.3.2 in /opt/hostedtoolcache/Python/3.13.7/arm64/lib/python3.13/site-packages (from -r requirements.txt (line 38)) (2.3.2)
[Deploy to EC2 via ECR/build-and-deploy]   | Requirement already satisfied: openai==1.106.1 in /opt/hostedtoolcache/Python/3.13.7/arm64/lib/python3.13/site-packages (from -r requirements.txt (line 39)) (1.106.1)
[Deploy to EC2 via ECR/build-and-deploy]   | Requirement already satisfied: orjson==3.11.3 in /opt/hostedtoolcache/Python/3.13.7/arm64/lib/python3.13/site-packages (from -r requirements.txt (line 40)) (3.11.3)
[Deploy to EC2 via ECR/build-and-deploy]   | Requirement already satisfied: packaging==25.0 in /opt/hostedtoolcache/Python/3.13.7/arm64/lib/python3.13/site-packages (from -r requirements.txt (line 41)) (25.0)
[Deploy to EC2 via ECR/build-and-deploy]   | Requirement already satisfied: pandas==2.3.2 in /opt/hostedtoolcache/Python/3.13.7/arm64/lib/python3.13/site-packages (from -r requirements.txt (line 42)) (2.3.2)
[Deploy to EC2 via ECR/build-and-deploy]   | Requirement already satisfied: peewee==3.18.2 in /opt/hostedtoolcache/Python/3.13.7/arm64/lib/python3.13/site-packages (from -r requirements.txt (line 43)) (3.18.2)
[Deploy to EC2 via ECR/build-and-deploy]   | Requirement already satisfied: pillow==11.3.0 in /opt/hostedtoolcache/Python/3.13.7/arm64/lib/python3.13/site-packages (from -r requirements.txt (line 44)) (11.3.0)
[Deploy to EC2 via ECR/build-and-deploy]   | Requirement already satisfied: platformdirs==4.4.0 in /opt/hostedtoolcache/Python/3.13.7/arm64/lib/python3.13/site-packages (from -r requirements.txt (line 45)) (4.4.0)
[Deploy to EC2 via ECR/build-and-deploy]   | Requirement already satisfied: protobuf==6.32.0 in /opt/hostedtoolcache/Python/3.13.7/arm64/lib/python3.13/site-packages (from -r requirements.txt (line 46)) (6.32.0)
[Deploy to EC2 via ECR/build-and-deploy]   | Requirement already satisfied: pycparser==2.22 in /opt/hostedtoolcache/Python/3.13.7/arm64/lib/python3.13/site-packages (from -r requirements.txt (line 47)) (2.22)
[Deploy to EC2 via ECR/build-and-deploy]   | Requirement already satisfied: pydantic==2.11.7 in /opt/hostedtoolcache/Python/3.13.7/arm64/lib/python3.13/site-packages (from -r requirements.txt (line 48)) (2.11.7)
[Deploy to EC2 via ECR/build-and-deploy]   | Requirement already satisfied: pydantic_core==2.33.2 in /opt/hostedtoolcache/Python/3.13.7/arm64/lib/python3.13/site-packages (from -r requirements.txt (line 49)) (2.33.2)
[Deploy to EC2 via ECR/build-and-deploy]   | Requirement already satisfied: pyparsing==3.2.3 in /opt/hostedtoolcache/Python/3.13.7/arm64/lib/python3.13/site-packages (from -r requirements.txt (line 50)) (3.2.3)
[Deploy to EC2 via ECR/build-and-deploy]   | Requirement already satisfied: python-dateutil==2.9.0.post0 in /opt/hostedtoolcache/Python/3.13.7/arm64/lib/python3.13/site-packages (from -r requirements.txt (line 51)) (2.9.0.post0)
[Deploy to EC2 via ECR/build-and-deploy]   | Requirement already satisfied: python-dotenv==1.1.1 in /opt/hostedtoolcache/Python/3.13.7/arm64/lib/python3.13/site-packages (from -r requirements.txt (line 52)) (1.1.1)
[Deploy to EC2 via ECR/build-and-deploy]   | Requirement already satisfied: pytz==2025.2 in /opt/hostedtoolcache/Python/3.13.7/arm64/lib/python3.13/site-packages (from -r requirements.txt (line 53)) (2025.2)
[Deploy to EC2 via ECR/build-and-deploy]   | Requirement already satisfied: PyYAML==6.0.2 in /opt/hostedtoolcache/Python/3.13.7/arm64/lib/python3.13/site-packages (from -r requirements.txt (line 54)) (6.0.2)
[Deploy to EC2 via ECR/build-and-deploy]   | Requirement already satisfied: regex==2025.9.1 in /opt/hostedtoolcache/Python/3.13.7/arm64/lib/python3.13/site-packages (from -r requirements.txt (line 55)) (2025.9.1)
[Deploy to EC2 via ECR/build-and-deploy]   | Requirement already satisfied: requests==2.32.5 in /opt/hostedtoolcache/Python/3.13.7/arm64/lib/python3.13/site-packages (from -r requirements.txt (line 56)) (2.32.5)
[Deploy to EC2 via ECR/build-and-deploy]   | Requirement already satisfied: requests-toolbelt==1.0.0 in /opt/hostedtoolcache/Python/3.13.7/arm64/lib/python3.13/site-packages (from -r requirements.txt (line 57)) (1.0.0)
[Deploy to EC2 via ECR/build-and-deploy]   | Requirement already satisfied: six==1.17.0 in /opt/hostedtoolcache/Python/3.13.7/arm64/lib/python3.13/site-packages (from -r requirements.txt (line 58)) (1.17.0)
[Deploy to EC2 via ECR/build-and-deploy]   | Requirement already satisfied: sniffio==1.3.1 in /opt/hostedtoolcache/Python/3.13.7/arm64/lib/python3.13/site-packages (from -r requirements.txt (line 59)) (1.3.1)
[Deploy to EC2 via ECR/build-and-deploy]   | Requirement already satisfied: soupsieve==2.8 in /opt/hostedtoolcache/Python/3.13.7/arm64/lib/python3.13/site-packages (from -r requirements.txt (line 60)) (2.8)
[Deploy to EC2 via ECR/build-and-deploy]   | Requirement already satisfied: SQLAlchemy==2.0.43 in /opt/hostedtoolcache/Python/3.13.7/arm64/lib/python3.13/site-packages (from -r requirements.txt (line 61)) (2.0.43)
[Deploy to EC2 via ECR/build-and-deploy]   | Requirement already satisfied: tenacity==9.1.2 in /opt/hostedtoolcache/Python/3.13.7/arm64/lib/python3.13/site-packages (from -r requirements.txt (line 62)) (9.1.2)
[Deploy to EC2 via ECR/build-and-deploy]   | Requirement already satisfied: tiktoken==0.11.0 in /opt/hostedtoolcache/Python/3.13.7/arm64/lib/python3.13/site-packages (from -r requirements.txt (line 63)) (0.11.0)
[Deploy to EC2 via ECR/build-and-deploy]   | Requirement already satisfied: tqdm==4.67.1 in /opt/hostedtoolcache/Python/3.13.7/arm64/lib/python3.13/site-packages (from -r requirements.txt (line 64)) (4.67.1)
[Deploy to EC2 via ECR/build-and-deploy]   | Requirement already satisfied: typing-inspection==0.4.1 in /opt/hostedtoolcache/Python/3.13.7/arm64/lib/python3.13/site-packages (from -r requirements.txt (line 65)) (0.4.1)
[Deploy to EC2 via ECR/build-and-deploy]   | Requirement already satisfied: typing_extensions==4.15.0 in /opt/hostedtoolcache/Python/3.13.7/arm64/lib/python3.13/site-packages (from -r requirements.txt (line 66)) (4.15.0)
[Deploy to EC2 via ECR/build-and-deploy]   | Requirement already satisfied: tzdata==2025.2 in /opt/hostedtoolcache/Python/3.13.7/arm64/lib/python3.13/site-packages (from -r requirements.txt (line 67)) (2025.2)
[Deploy to EC2 via ECR/build-and-deploy]   | Requirement already satisfied: urllib3==2.5.0 in /opt/hostedtoolcache/Python/3.13.7/arm64/lib/python3.13/site-packages (from -r requirements.txt (line 68)) (2.5.0)
[Deploy to EC2 via ECR/build-and-deploy]   | Requirement already satisfied: webencodings==0.5.1 in /opt/hostedtoolcache/Python/3.13.7/arm64/lib/python3.13/site-packages (from -r requirements.txt (line 69)) (0.5.1)
[Deploy to EC2 via ECR/build-and-deploy]   | Requirement already satisfied: websockets==15.0.1 in /opt/hostedtoolcache/Python/3.13.7/arm64/lib/python3.13/site-packages (from -r requirements.txt (line 70)) (15.0.1)
[Deploy to EC2 via ECR/build-and-deploy]   | Requirement already satisfied: Werkzeug==3.1.3 in /opt/hostedtoolcache/Python/3.13.7/arm64/lib/python3.13/site-packages (from -r requirements.txt (line 71)) (3.1.3)
[Deploy to EC2 via ECR/build-and-deploy]   | Requirement already satisfied: yfinance==0.2.65 in /opt/hostedtoolcache/Python/3.13.7/arm64/lib/python3.13/site-packages (from -r requirements.txt (line 72)) (0.2.65)
[Deploy to EC2 via ECR/build-and-deploy]   | Requirement already satisfied: zstandard==0.24.0 in /opt/hostedtoolcache/Python/3.13.7/arm64/lib/python3.13/site-packages (from -r requirements.txt (line 73)) (0.24.0)
[Deploy to EC2 via ECR/build-and-deploy]   | Requirement already satisfied: greenlet>=1 in /opt/hostedtoolcache/Python/3.13.7/arm64/lib/python3.13/site-packages (from SQLAlchemy==2.0.43->-r requirements.txt (line 61)) (3.2.4)
[Deploy to EC2 via ECR/build-and-deploy]   | WARNING: Running pip as the 'root' user can result in broken permissions and conflicting behaviour with the system package manager, possibly rendering your system unusable. It is recommended to use a virtual environment instead: https://pip.pypa.io/warnings/venv. Use the --root-user-action option if you know what you are doing and want to suppress this warning.
[Deploy to EC2 via ECR/build-and-deploy]   | /var/run/act/workflow/2: line 4: pytest: command not found
[Deploy to EC2 via ECR/build-and-deploy]   ‚úÖ  Success - Main Run tests [1.11983325s]
[Deploy to EC2 via ECR/build-and-deploy] ‚≠ê Run Main Local Docker build (act only)
[Deploy to EC2 via ECR/build-and-deploy]   üê≥  docker exec cmd=[bash -e /var/run/act/workflow/3] user= workdir=
[Deploy to EC2 via ECR/build-and-deploy]   | #0 building with "default" instance using docker driver
[Deploy to EC2 via ECR/build-and-deploy]   | 
[Deploy to EC2 via ECR/build-and-deploy]   | #1 [internal] load build definition from Dockerfile
[Deploy to EC2 via ECR/build-and-deploy]   | #1 transferring dockerfile: 972B done
[Deploy to EC2 via ECR/build-and-deploy]   | #1 DONE 0.0s
[Deploy to EC2 via ECR/build-and-deploy]   | 
[Deploy to EC2 via ECR/build-and-deploy]   | #2 [internal] load metadata for docker.io/library/python:3.13-slim
[Deploy to EC2 via ECR/build-and-deploy]   | #2 DONE 0.7s
[Deploy to EC2 via ECR/build-and-deploy]   | 
[Deploy to EC2 via ECR/build-and-deploy]   | #3 [internal] load .dockerignore
[Deploy to EC2 via ECR/build-and-deploy]   | #3 transferring context: 102B done
[Deploy to EC2 via ECR/build-and-deploy]   | #3 DONE 0.0s
[Deploy to EC2 via ECR/build-and-deploy]   | 
[Deploy to EC2 via ECR/build-and-deploy]   | #4 [builder 1/6] FROM docker.io/library/python:3.13-slim@sha256:1bca0202e953784ac2a1daf36ebbc9cbebed48afcfba12d1225aaab3793eca33
[Deploy to EC2 via ECR/build-and-deploy]   | #4 DONE 0.0s
[Deploy to EC2 via ECR/build-and-deploy]   | 
[Deploy to EC2 via ECR/build-and-deploy]   | #5 [builder 3/6] RUN apt-get update && apt-get install -y --no-install-recommends build-essential   && rm -rf /var/lib/apt/lists/*
[Deploy to EC2 via ECR/build-and-deploy]   | #5 CACHED
[Deploy to EC2 via ECR/build-and-deploy]   | 
[Deploy to EC2 via ECR/build-and-deploy]   | #6 [builder 2/6] WORKDIR /app
[Deploy to EC2 via ECR/build-and-deploy]   | #6 CACHED
[Deploy to EC2 via ECR/build-and-deploy]   | 
[Deploy to EC2 via ECR/build-and-deploy]   | #7 [internal] load build context
[Deploy to EC2 via ECR/build-and-deploy]   | #7 transferring context: 115.50kB 0.0s done
[Deploy to EC2 via ECR/build-and-deploy]   | #7 DONE 0.0s
[Deploy to EC2 via ECR/build-and-deploy]   | 
[Deploy to EC2 via ECR/build-and-deploy]   | #8 [stage-1 3/6] RUN addgroup --system app && adduser --system --home /home/app --ingroup app app  && mkdir -p /home/app/.config/matplotlib && chown -R app:app /home/app
[Deploy to EC2 via ECR/build-and-deploy]   | #8 DONE 0.4s
[Deploy to EC2 via ECR/build-and-deploy]   | 
[Deploy to EC2 via ECR/build-and-deploy]   | #9 [builder 4/6] RUN pip install -U pip wheel setuptools
[Deploy to EC2 via ECR/build-and-deploy]   | #9 1.504 Requirement already satisfied: pip in /usr/local/lib/python3.13/site-packages (25.2)
[Deploy to EC2 via ECR/build-and-deploy]   | #9 1.641 Collecting wheel
[Deploy to EC2 via ECR/build-and-deploy]   | #9 1.744   Downloading wheel-0.45.1-py3-none-any.whl.metadata (2.3 kB)
[Deploy to EC2 via ECR/build-and-deploy]   | #9 1.875 Collecting setuptools
[Deploy to EC2 via ECR/build-and-deploy]   | #9 1.893   Downloading setuptools-80.9.0-py3-none-any.whl.metadata (6.6 kB)
[Deploy to EC2 via ECR/build-and-deploy]   | #9 1.919 Downloading wheel-0.45.1-py3-none-any.whl (72 kB)
[Deploy to EC2 via ECR/build-and-deploy]   | #9 1.953 Downloading setuptools-80.9.0-py3-none-any.whl (1.2 MB)
[Deploy to EC2 via ECR/build-and-deploy]   | #9 2.005    ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ 1.2/1.2 MB 38.0 MB/s  0:00:00
[Deploy to EC2 via ECR/build-and-deploy]   | #9 2.018 Installing collected packages: wheel, setuptools
[Deploy to EC2 via ECR/build-and-deploy]   | #9 2.569 
[Deploy to EC2 via ECR/build-and-deploy]   | #9 2.569 Successfully installed setuptools-80.9.0 wheel-0.45.1
[Deploy to EC2 via ECR/build-and-deploy]   | #9 2.570 WARNING: Running pip as the 'root' user can result in broken permissions and conflicting behaviour with the system package manager, possibly rendering your system unusable. It is recommended to use a virtual environment instead: https://pip.pypa.io/warnings/venv. Use the --root-user-action option if you know what you are doing and want to suppress this warning.
[Deploy to EC2 via ECR/build-and-deploy]   | #9 DONE 2.8s
[Deploy to EC2 via ECR/build-and-deploy]   | 
[Deploy to EC2 via ECR/build-and-deploy]   | #10 [builder 5/6] COPY requirements.txt .
[Deploy to EC2 via ECR/build-and-deploy]   | #10 DONE 0.0s
[Deploy to EC2 via ECR/build-and-deploy]   | 
[Deploy to EC2 via ECR/build-and-deploy]   | #11 [builder 6/6] RUN pip wheel --no-cache-dir --no-deps -r requirements.txt -w /wheels
[Deploy to EC2 via ECR/build-and-deploy]   | #11 0.381 Collecting annotated-types==0.7.0 (from -r requirements.txt (line 1))
[Deploy to EC2 via ECR/build-and-deploy]   | #11 0.451   Downloading annotated_types-0.7.0-py3-none-any.whl.metadata (15 kB)
[Deploy to EC2 via ECR/build-and-deploy]   | #11 0.483 Collecting anyio==4.10.0 (from -r requirements.txt (line 2))
[Deploy to EC2 via ECR/build-and-deploy]   | #11 0.503   Downloading anyio-4.10.0-py3-none-any.whl.metadata (4.0 kB)
[Deploy to EC2 via ECR/build-and-deploy]   | #11 0.579 Collecting backtrader==1.9.78.123 (from -r requirements.txt (line 3))
[Deploy to EC2 via ECR/build-and-deploy]   | #11 0.599   Downloading backtrader-1.9.78.123-py2.py3-none-any.whl.metadata (6.8 kB)
[Deploy to EC2 via ECR/build-and-deploy]   | #11 0.633 Collecting beautifulsoup4==4.13.5 (from -r requirements.txt (line 4))
[Deploy to EC2 via ECR/build-and-deploy]   | #11 0.648   Downloading beautifulsoup4-4.13.5-py3-none-any.whl.metadata (3.8 kB)
[Deploy to EC2 via ECR/build-and-deploy]   | #11 0.678 Collecting bleach==6.2.0 (from -r requirements.txt (line 5))
[Deploy to EC2 via ECR/build-and-deploy]   | #11 0.694   Downloading bleach-6.2.0-py3-none-any.whl.metadata (30 kB)
[Deploy to EC2 via ECR/build-and-deploy]   | #11 0.728 Collecting blinker==1.9.0 (from -r requirements.txt (line 6))
[Deploy to EC2 via ECR/build-and-deploy]   | #11 0.747   Downloading blinker-1.9.0-py3-none-any.whl.metadata (1.6 kB)
[Deploy to EC2 via ECR/build-and-deploy]   | #11 0.779 Collecting certifi==2025.8.3 (from -r requirements.txt (line 7))
[Deploy to EC2 via ECR/build-and-deploy]   | #11 0.795   Downloading certifi-2025.8.3-py3-none-any.whl.metadata (2.4 kB)
[Deploy to EC2 via ECR/build-and-deploy]   | #11 0.903 Collecting cffi==2.0.0 (from -r requirements.txt (line 8))
[Deploy to EC2 via ECR/build-and-deploy]   | #11 0.919   Downloading cffi-2.0.0-cp313-cp313-manylinux2014_aarch64.manylinux_2_17_aarch64.whl.metadata (2.6 kB)
[Deploy to EC2 via ECR/build-and-deploy]   | #11 0.985 Collecting charset-normalizer==3.4.3 (from -r requirements.txt (line 9))
[Deploy to EC2 via ECR/build-and-deploy]   | #11 1.002   Downloading charset_normalizer-3.4.3-cp313-cp313-manylinux2014_aarch64.manylinux_2_17_aarch64.manylinux_2_28_aarch64.whl.metadata (36 kB)
[Deploy to EC2 via ECR/build-and-deploy]   | #11 1.036 Collecting click==8.2.1 (from -r requirements.txt (line 10))
[Deploy to EC2 via ECR/build-and-deploy]   | #11 1.059   Downloading click-8.2.1-py3-none-any.whl.metadata (2.5 kB)
[Deploy to EC2 via ECR/build-and-deploy]   | #11 1.116 Collecting contourpy==1.3.3 (from -r requirements.txt (line 11))
[Deploy to EC2 via ECR/build-and-deploy]   | #11 1.138   Downloading contourpy-1.3.3-cp313-cp313-manylinux_2_26_aarch64.manylinux_2_28_aarch64.whl.metadata (5.5 kB)
[Deploy to EC2 via ECR/build-and-deploy]   | #11 1.242 Collecting curl_cffi==0.13.0 (from -r requirements.txt (line 12))
[Deploy to EC2 via ECR/build-and-deploy]   | #11 1.258   Downloading curl_cffi-0.13.0-cp39-abi3-manylinux_2_17_aarch64.manylinux2014_aarch64.whl.metadata (13 kB)
[Deploy to EC2 via ECR/build-and-deploy]   | #11 1.302 Collecting cycler==0.12.1 (from -r requirements.txt (line 13))
[Deploy to EC2 via ECR/build-and-deploy]   | #11 1.320   Downloading cycler-0.12.1-py3-none-any.whl.metadata (3.8 kB)
[Deploy to EC2 via ECR/build-and-deploy]   | #11 1.344 Collecting distro==1.9.0 (from -r requirements.txt (line 14))
[Deploy to EC2 via ECR/build-and-deploy]   | #11 1.362   Downloading distro-1.9.0-py3-none-any.whl.metadata (6.8 kB)
[Deploy to EC2 via ECR/build-and-deploy]   | #11 1.389 Collecting Flask==3.1.2 (from -r requirements.txt (line 15))
[Deploy to EC2 via ECR/build-and-deploy]   | #11 1.409   Downloading flask-3.1.2-py3-none-any.whl.metadata (3.2 kB)
[Deploy to EC2 via ECR/build-and-deploy]   | #11 1.506 Collecting fonttools==4.59.2 (from -r requirements.txt (line 16))
[Deploy to EC2 via ECR/build-and-deploy]   | #11 1.526   Downloading fonttools-4.59.2-cp313-cp313-manylinux2014_aarch64.manylinux_2_17_aarch64.manylinux_2_28_aarch64.whl.metadata (109 kB)
[Deploy to EC2 via ECR/build-and-deploy]   | #11 1.581 Collecting frozendict==2.4.6 (from -r requirements.txt (line 17))
[Deploy to EC2 via ECR/build-and-deploy]   | #11 1.596   Downloading frozendict-2.4.6-py313-none-any.whl.metadata (23 kB)
[Deploy to EC2 via ECR/build-and-deploy]   | #11 1.623 Collecting gunicorn==23.0.0 (from -r requirements.txt (line 18))
[Deploy to EC2 via ECR/build-and-deploy]   | #11 1.639   Downloading gunicorn-23.0.0-py3-none-any.whl.metadata (4.4 kB)
[Deploy to EC2 via ECR/build-and-deploy]   | #11 1.662 Collecting h11==0.16.0 (from -r requirements.txt (line 19))
[Deploy to EC2 via ECR/build-and-deploy]   | #11 1.682   Downloading h11-0.16.0-py3-none-any.whl.metadata (8.3 kB)
[Deploy to EC2 via ECR/build-and-deploy]   | #11 1.714 Collecting httpcore==1.0.9 (from -r requirements.txt (line 20))
[Deploy to EC2 via ECR/build-and-deploy]   | #11 1.730   Downloading httpcore-1.0.9-py3-none-any.whl.metadata (21 kB)
[Deploy to EC2 via ECR/build-and-deploy]   | #11 1.765 Collecting httpx==0.28.1 (from -r requirements.txt (line 21))
[Deploy to EC2 via ECR/build-and-deploy]   | #11 1.783   Downloading httpx-0.28.1-py3-none-any.whl.metadata (7.1 kB)
[Deploy to EC2 via ECR/build-and-deploy]   | #11 1.810 Collecting idna==3.10 (from -r requirements.txt (line 22))
[Deploy to EC2 via ECR/build-and-deploy]   | #11 1.829   Downloading idna-3.10-py3-none-any.whl.metadata (10 kB)
[Deploy to EC2 via ECR/build-and-deploy]   | #11 1.854 Collecting itsdangerous==2.2.0 (from -r requirements.txt (line 23))
[Deploy to EC2 via ECR/build-and-deploy]   | #11 1.872   Downloading itsdangerous-2.2.0-py3-none-any.whl.metadata (1.9 kB)
[Deploy to EC2 via ECR/build-and-deploy]   | #11 1.900 Collecting Jinja2==3.1.6 (from -r requirements.txt (line 24))
[Deploy to EC2 via ECR/build-and-deploy]   | #11 1.915   Downloading jinja2-3.1.6-py3-none-any.whl.metadata (2.9 kB)
[Deploy to EC2 via ECR/build-and-deploy]   | #11 2.007 Collecting jiter==0.10.0 (from -r requirements.txt (line 25))
[Deploy to EC2 via ECR/build-and-deploy]   | #11 2.028   Downloading jiter-0.10.0-cp313-cp313-manylinux_2_17_aarch64.manylinux2014_aarch64.whl.metadata (5.2 kB)
[Deploy to EC2 via ECR/build-and-deploy]   | #11 2.053 Collecting jsonpatch==1.33 (from -r requirements.txt (line 26))
[Deploy to EC2 via ECR/build-and-deploy]   | #11 2.069   Downloading jsonpatch-1.33-py2.py3-none-any.whl.metadata (3.0 kB)
[Deploy to EC2 via ECR/build-and-deploy]   | #11 2.094 Collecting jsonpointer==3.0.0 (from -r requirements.txt (line 27))
[Deploy to EC2 via ECR/build-and-deploy]   | #11 2.113   Downloading jsonpointer-3.0.0-py2.py3-none-any.whl.metadata (2.3 kB)
[Deploy to EC2 via ECR/build-and-deploy]   | #11 2.174 Collecting kiwisolver==1.4.9 (from -r requirements.txt (line 28))
[Deploy to EC2 via ECR/build-and-deploy]   | #11 2.195   Downloading kiwisolver-1.4.9-cp313-cp313-manylinux_2_24_aarch64.manylinux_2_28_aarch64.whl.metadata (6.3 kB)
[Deploy to EC2 via ECR/build-and-deploy]   | #11 2.252 Collecting langchain==0.3.27 (from -r requirements.txt (line 29))
[Deploy to EC2 via ECR/build-and-deploy]   | #11 2.267   Downloading langchain-0.3.27-py3-none-any.whl.metadata (7.8 kB)
[Deploy to EC2 via ECR/build-and-deploy]   | #11 2.309 Collecting langchain-core==0.3.75 (from -r requirements.txt (line 30))
[Deploy to EC2 via ECR/build-and-deploy]   | #11 2.324   Downloading langchain_core-0.3.75-py3-none-any.whl.metadata (5.7 kB)
[Deploy to EC2 via ECR/build-and-deploy]   | #11 2.360 Collecting langchain-openai==0.3.32 (from -r requirements.txt (line 31))
[Deploy to EC2 via ECR/build-and-deploy]   | #11 2.381   Downloading langchain_openai-0.3.32-py3-none-any.whl.metadata (2.4 kB)
[Deploy to EC2 via ECR/build-and-deploy]   | #11 2.404 Collecting langchain-text-splitters==0.3.11 (from -r requirements.txt (line 32))
[Deploy to EC2 via ECR/build-and-deploy]   | #11 2.423   Downloading langchain_text_splitters-0.3.11-py3-none-any.whl.metadata (1.8 kB)
[Deploy to EC2 via ECR/build-and-deploy]   | #11 2.487 Collecting langsmith==0.4.25 (from -r requirements.txt (line 33))
[Deploy to EC2 via ECR/build-and-deploy]   | #11 2.505   Downloading langsmith-0.4.25-py3-none-any.whl.metadata (14 kB)
[Deploy to EC2 via ECR/build-and-deploy]   | #11 2.550 Collecting Markdown==3.9 (from -r requirements.txt (line 34))
[Deploy to EC2 via ECR/build-and-deploy]   | #11 2.569   Downloading markdown-3.9-py3-none-any.whl.metadata (5.1 kB)
[Deploy to EC2 via ECR/build-and-deploy]   | #11 2.621 Collecting MarkupSafe==3.0.2 (from -r requirements.txt (line 35))
[Deploy to EC2 via ECR/build-and-deploy]   | #11 2.639   Downloading MarkupSafe-3.0.2-cp313-cp313-manylinux_2_17_aarch64.manylinux2014_aarch64.whl.metadata (4.0 kB)
[Deploy to EC2 via ECR/build-and-deploy]   | #11 2.728 Collecting matplotlib==3.10.6 (from -r requirements.txt (line 36))
[Deploy to EC2 via ECR/build-and-deploy]   | #11 2.745   Downloading matplotlib-3.10.6-cp313-cp313-manylinux_2_27_aarch64.manylinux_2_28_aarch64.whl.metadata (11 kB)
[Deploy to EC2 via ECR/build-and-deploy]   | #11 2.768 Collecting multitasking==0.0.12 (from -r requirements.txt (line 37))
[Deploy to EC2 via ECR/build-and-deploy]   | #11 2.789   Downloading multitasking-0.0.12.tar.gz (19 kB)
[Deploy to EC2 via ECR/build-and-deploy]   | #11 2.795   Preparing metadata (setup.py): started
[Deploy to EC2 via ECR/build-and-deploy]   | #11 2.936   Preparing metadata (setup.py): finished with status 'done'
[Deploy to EC2 via ECR/build-and-deploy]   | #11 3.046 Collecting numpy==2.3.2 (from -r requirements.txt (line 38))
[Deploy to EC2 via ECR/build-and-deploy]   | #11 3.060   Downloading numpy-2.3.2-cp313-cp313-manylinux_2_27_aarch64.manylinux_2_28_aarch64.whl.metadata (62 kB)
[Deploy to EC2 via ECR/build-and-deploy]   | #11 3.111 Collecting openai==1.106.1 (from -r requirements.txt (line 39))
[Deploy to EC2 via ECR/build-and-deploy]   | #11 3.126   Downloading openai-1.106.1-py3-none-any.whl.metadata (29 kB)
[Deploy to EC2 via ECR/build-and-deploy]   | #11 3.352 Collecting orjson==3.11.3 (from -r requirements.txt (line 40))
[Deploy to EC2 via ECR/build-and-deploy]   | #11 3.368   Downloading orjson-3.11.3-cp313-cp313-manylinux_2_17_aarch64.manylinux2014_aarch64.whl.metadata (41 kB)
[Deploy to EC2 via ECR/build-and-deploy]   | #11 3.398 Collecting packaging==25.0 (from -r requirements.txt (line 41))
[Deploy to EC2 via ECR/build-and-deploy]   | #11 3.416   Downloading packaging-25.0-py3-none-any.whl.metadata (3.3 kB)
[Deploy to EC2 via ECR/build-and-deploy]   | #11 3.490 Collecting pandas==2.3.2 (from -r requirements.txt (line 42))
[Deploy to EC2 via ECR/build-and-deploy]   | #11 3.508   Downloading pandas-2.3.2-cp313-cp313-manylinux_2_17_aarch64.manylinux2014_aarch64.whl.metadata (91 kB)
[Deploy to EC2 via ECR/build-and-deploy]   | #11 3.551 Collecting peewee==3.18.2 (from -r requirements.txt (line 43))
[Deploy to EC2 via ECR/build-and-deploy]   | #11 3.568   Downloading peewee-3.18.2.tar.gz (949 kB)
[Deploy to EC2 via ECR/build-and-deploy]   | #11 3.608      ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ 949.2/949.2 kB 33.6 MB/s  0:00:00
[Deploy to EC2 via ECR/build-and-deploy]   | #11 3.662   Installing build dependencies: started
[Deploy to EC2 via ECR/build-and-deploy]   | #11 4.175   Installing build dependencies: finished with status 'done'
[Deploy to EC2 via ECR/build-and-deploy]   | #11 4.176   Getting requirements to build wheel: started
[Deploy to EC2 via ECR/build-and-deploy]   | #11 4.470   Getting requirements to build wheel: finished with status 'done'
[Deploy to EC2 via ECR/build-and-deploy]   | #11 4.470   Preparing metadata (pyproject.toml): started
[Deploy to EC2 via ECR/build-and-deploy]   | #11 4.614   Preparing metadata (pyproject.toml): finished with status 'done'
[Deploy to EC2 via ECR/build-and-deploy]   | #11 4.722 Collecting pillow==11.3.0 (from -r requirements.txt (line 44))
[Deploy to EC2 via ECR/build-and-deploy]   | #11 4.741   Downloading pillow-11.3.0-cp313-cp313-manylinux_2_27_aarch64.manylinux_2_28_aarch64.whl.metadata (9.0 kB)
[Deploy to EC2 via ECR/build-and-deploy]   | #11 4.769 Collecting platformdirs==4.4.0 (from -r requirements.txt (line 45))
[Deploy to EC2 via ECR/build-and-deploy]   | #11 4.784   Downloading platformdirs-4.4.0-py3-none-any.whl.metadata (12 kB)
[Deploy to EC2 via ECR/build-and-deploy]   | #11 4.894 Collecting protobuf==6.32.0 (from -r requirements.txt (line 46))
[Deploy to EC2 via ECR/build-and-deploy]   | #11 4.908   Downloading protobuf-6.32.0-cp39-abi3-manylinux2014_aarch64.whl.metadata (593 bytes)
[Deploy to EC2 via ECR/build-and-deploy]   | #11 4.931 Collecting pycparser==2.22 (from -r requirements.txt (line 47))
[Deploy to EC2 via ECR/build-and-deploy]   | #11 4.950   Downloading pycparser-2.22-py3-none-any.whl.metadata (943 bytes)
[Deploy to EC2 via ECR/build-and-deploy]   | #11 5.030 Collecting pydantic==2.11.7 (from -r requirements.txt (line 48))
[Deploy to EC2 via ECR/build-and-deploy]   | #11 5.046   Downloading pydantic-2.11.7-py3-none-any.whl.metadata (67 kB)
[Deploy to EC2 via ECR/build-and-deploy]   | #11 5.416 Collecting pydantic_core==2.33.2 (from -r requirements.txt (line 49))
[Deploy to EC2 via ECR/build-and-deploy]   | #11 5.437   Downloading pydantic_core-2.33.2-cp313-cp313-manylinux_2_17_aarch64.manylinux2014_aarch64.whl.metadata (6.8 kB)
[Deploy to EC2 via ECR/build-and-deploy]   | #11 5.469 Collecting pyparsing==3.2.3 (from -r requirements.txt (line 50))
[Deploy to EC2 via ECR/build-and-deploy]   | #11 5.485   Downloading pyparsing-3.2.3-py3-none-any.whl.metadata (5.0 kB)
[Deploy to EC2 via ECR/build-and-deploy]   | #11 5.512 Collecting python-dateutil==2.9.0.post0 (from -r requirements.txt (line 51))
[Deploy to EC2 via ECR/build-and-deploy]   | #11 5.532   Downloading python_dateutil-2.9.0.post0-py2.py3-none-any.whl.metadata (8.4 kB)
[Deploy to EC2 via ECR/build-and-deploy]   | #11 5.561 Collecting python-dotenv==1.1.1 (from -r requirements.txt (line 52))
[Deploy to EC2 via ECR/build-and-deploy]   | #11 5.577   Downloading python_dotenv-1.1.1-py3-none-any.whl.metadata (24 kB)
[Deploy to EC2 via ECR/build-and-deploy]   | #11 5.627 Collecting pytz==2025.2 (from -r requirements.txt (line 53))
[Deploy to EC2 via ECR/build-and-deploy]   | #11 5.644   Downloading pytz-2025.2-py2.py3-none-any.whl.metadata (22 kB)
[Deploy to EC2 via ECR/build-and-deploy]   | #11 5.681 Collecting PyYAML==6.0.2 (from -r requirements.txt (line 54))
[Deploy to EC2 via ECR/build-and-deploy]   | #11 5.697   Downloading PyYAML-6.0.2-cp313-cp313-manylinux_2_17_aarch64.manylinux2014_aarch64.whl.metadata (2.1 kB)
[Deploy to EC2 via ECR/build-and-deploy]   | #11 5.898 Collecting regex==2025.9.1 (from -r requirements.txt (line 55))
[Deploy to EC2 via ECR/build-and-deploy]   | #11 5.920   Downloading regex-2025.9.1-cp313-cp313-manylinux2014_aarch64.manylinux_2_17_aarch64.manylinux_2_28_aarch64.whl.metadata (40 kB)
[Deploy to EC2 via ECR/build-and-deploy]   | #11 5.952 Collecting requests==2.32.5 (from -r requirements.txt (line 56))
[Deploy to EC2 via ECR/build-and-deploy]   | #11 5.969   Downloading requests-2.32.5-py3-none-any.whl.metadata (4.9 kB)
[Deploy to EC2 via ECR/build-and-deploy]   | #11 5.995 Collecting requests-toolbelt==1.0.0 (from -r requirements.txt (line 57))
[Deploy to EC2 via ECR/build-and-deploy]   | #11 6.014   Downloading requests_toolbelt-1.0.0-py2.py3-none-any.whl.metadata (14 kB)
[Deploy to EC2 via ECR/build-and-deploy]   | #11 6.041 Collecting six==1.17.0 (from -r requirements.txt (line 58))
[Deploy to EC2 via ECR/build-and-deploy]   | #11 6.057   Downloading six-1.17.0-py2.py3-none-any.whl.metadata (1.7 kB)
[Deploy to EC2 via ECR/build-and-deploy]   | #11 6.081 Collecting sniffio==1.3.1 (from -r requirements.txt (line 59))
[Deploy to EC2 via ECR/build-and-deploy]   | #11 6.099   Downloading sniffio-1.3.1-py3-none-any.whl.metadata (3.9 kB)
[Deploy to EC2 via ECR/build-and-deploy]   | #11 6.128 Collecting soupsieve==2.8 (from -r requirements.txt (line 60))
[Deploy to EC2 via ECR/build-and-deploy]   | #11 6.149   Downloading soupsieve-2.8-py3-none-any.whl.metadata (4.6 kB)
[Deploy to EC2 via ECR/build-and-deploy]   | #11 6.380 Collecting SQLAlchemy==2.0.43 (from -r requirements.txt (line 61))
[Deploy to EC2 via ECR/build-and-deploy]   | #11 6.401   Downloading sqlalchemy-2.0.43-cp313-cp313-manylinux_2_17_aarch64.manylinux2014_aarch64.whl.metadata (9.6 kB)
[Deploy to EC2 via ECR/build-and-deploy]   | #11 6.459 Collecting tenacity==9.1.2 (from -r requirements.txt (line 62))
[Deploy to EC2 via ECR/build-and-deploy]   | #11 6.478   Downloading tenacity-9.1.2-py3-none-any.whl.metadata (1.2 kB)
[Deploy to EC2 via ECR/build-and-deploy]   | #11 6.519 Collecting tiktoken==0.11.0 (from -r requirements.txt (line 63))
[Deploy to EC2 via ECR/build-and-deploy]   | #11 6.540   Downloading tiktoken-0.11.0-cp313-cp313-manylinux_2_17_aarch64.manylinux2014_aarch64.whl.metadata (6.7 kB)
[Deploy to EC2 via ECR/build-and-deploy]   | #11 6.576 Collecting tqdm==4.67.1 (from -r requirements.txt (line 64))
[Deploy to EC2 via ECR/build-and-deploy]   | #11 6.596   Downloading tqdm-4.67.1-py3-none-any.whl.metadata (57 kB)
[Deploy to EC2 via ECR/build-and-deploy]   | #11 6.629 Collecting typing-inspection==0.4.1 (from -r requirements.txt (line 65))
[Deploy to EC2 via ECR/build-and-deploy]   | #11 6.646   Downloading typing_inspection-0.4.1-py3-none-any.whl.metadata (2.6 kB)
[Deploy to EC2 via ECR/build-and-deploy]   | #11 6.677 Collecting typing_extensions==4.15.0 (from -r requirements.txt (line 66))
[Deploy to EC2 via ECR/build-and-deploy]   | #11 6.694   Downloading typing_extensions-4.15.0-py3-none-any.whl.metadata (3.3 kB)
[Deploy to EC2 via ECR/build-and-deploy]   | #11 6.732 Collecting tzdata==2025.2 (from -r requirements.txt (line 67))
[Deploy to EC2 via ECR/build-and-deploy]   | #11 6.749   Downloading tzdata-2025.2-py2.py3-none-any.whl.metadata (1.4 kB)
[Deploy to EC2 via ECR/build-and-deploy]   | #11 6.779 Collecting urllib3==2.5.0 (from -r requirements.txt (line 68))
[Deploy to EC2 via ECR/build-and-deploy]   | #11 6.795   Downloading urllib3-2.5.0-py3-none-any.whl.metadata (6.5 kB)
[Deploy to EC2 via ECR/build-and-deploy]   | #11 6.817 Collecting webencodings==0.5.1 (from -r requirements.txt (line 69))
[Deploy to EC2 via ECR/build-and-deploy]   | #11 6.838   Downloading webencodings-0.5.1-py2.py3-none-any.whl.metadata (2.1 kB)
[Deploy to EC2 via ECR/build-and-deploy]   | #11 6.907 Collecting websockets==15.0.1 (from -r requirements.txt (line 70))
[Deploy to EC2 via ECR/build-and-deploy]   | #11 6.925   Downloading websockets-15.0.1-cp313-cp313-manylinux_2_17_aarch64.manylinux2014_aarch64.whl.metadata (6.8 kB)
[Deploy to EC2 via ECR/build-and-deploy]   | #11 6.956 Collecting Werkzeug==3.1.3 (from -r requirements.txt (line 71))
[Deploy to EC2 via ECR/build-and-deploy]   | #11 6.976   Downloading werkzeug-3.1.3-py3-none-any.whl.metadata (3.7 kB)
[Deploy to EC2 via ECR/build-and-deploy]   | #11 7.011 Collecting yfinance==0.2.65 (from -r requirements.txt (line 72))
[Deploy to EC2 via ECR/build-and-deploy]   | #11 7.029   Downloading yfinance-0.2.65-py2.py3-none-any.whl.metadata (5.8 kB)
[Deploy to EC2 via ECR/build-and-deploy]   | #11 7.086 Collecting zstandard==0.24.0 (from -r requirements.txt (line 73))
[Deploy to EC2 via ECR/build-and-deploy]   | #11 7.103   Downloading zstandard-0.24.0-cp313-cp313-manylinux2014_aarch64.manylinux_2_17_aarch64.whl.metadata (3.1 kB)
[Deploy to EC2 via ECR/build-and-deploy]   | #11 7.174 Downloading annotated_types-0.7.0-py3-none-any.whl (13 kB)
[Deploy to EC2 via ECR/build-and-deploy]   | #11 7.194 Downloading anyio-4.10.0-py3-none-any.whl (107 kB)
[Deploy to EC2 via ECR/build-and-deploy]   | #11 7.221 Downloading backtrader-1.9.78.123-py2.py3-none-any.whl (419 kB)
[Deploy to EC2 via ECR/build-and-deploy]   | #11 7.244 Downloading beautifulsoup4-4.13.5-py3-none-any.whl (105 kB)
[Deploy to EC2 via ECR/build-and-deploy]   | #11 7.262 Downloading bleach-6.2.0-py3-none-any.whl (163 kB)
[Deploy to EC2 via ECR/build-and-deploy]   | #11 7.283 Downloading blinker-1.9.0-py3-none-any.whl (8.5 kB)
[Deploy to EC2 via ECR/build-and-deploy]   | #11 7.305 Downloading certifi-2025.8.3-py3-none-any.whl (161 kB)
[Deploy to EC2 via ECR/build-and-deploy]   | #11 7.329 Downloading cffi-2.0.0-cp313-cp313-manylinux2014_aarch64.manylinux_2_17_aarch64.whl (220 kB)
[Deploy to EC2 via ECR/build-and-deploy]   | #11 7.353 Downloading charset_normalizer-3.4.3-cp313-cp313-manylinux2014_aarch64.manylinux_2_17_aarch64.manylinux_2_28_aarch64.whl (146 kB)
[Deploy to EC2 via ECR/build-and-deploy]   | #11 7.383 Downloading click-8.2.1-py3-none-any.whl (102 kB)
[Deploy to EC2 via ECR/build-and-deploy]   | #11 7.403 Downloading contourpy-1.3.3-cp313-cp313-manylinux_2_26_aarch64.manylinux_2_28_aarch64.whl (334 kB)
[Deploy to EC2 via ECR/build-and-deploy]   | #11 7.429 Downloading curl_cffi-0.13.0-cp39-abi3-manylinux_2_17_aarch64.manylinux2014_aarch64.whl (7.9 MB)
[Deploy to EC2 via ECR/build-and-deploy]   | #11 7.555    ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ 7.9/7.9 MB 64.6 MB/s  0:00:00
[Deploy to EC2 via ECR/build-and-deploy]   | #11 7.571 Downloading cycler-0.12.1-py3-none-any.whl (8.3 kB)
[Deploy to EC2 via ECR/build-and-deploy]   | #11 7.594 Downloading distro-1.9.0-py3-none-any.whl (20 kB)
[Deploy to EC2 via ECR/build-and-deploy]   | #11 7.614 Downloading flask-3.1.2-py3-none-any.whl (103 kB)
[Deploy to EC2 via ECR/build-and-deploy]   | #11 7.635 Downloading fonttools-4.59.2-cp313-cp313-manylinux2014_aarch64.manylinux_2_17_aarch64.manylinux_2_28_aarch64.whl (5.0 MB)
[Deploy to EC2 via ECR/build-and-deploy]   | #11 7.719    ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ 5.0/5.0 MB 61.2 MB/s  0:00:00
[Deploy to EC2 via ECR/build-and-deploy]   | #11 7.739 Downloading frozendict-2.4.6-py313-none-any.whl (16 kB)
[Deploy to EC2 via ECR/build-and-deploy]   | #11 7.757 Downloading gunicorn-23.0.0-py3-none-any.whl (85 kB)
[Deploy to EC2 via ECR/build-and-deploy]   | #11 7.778 Downloading h11-0.16.0-py3-none-any.whl (37 kB)
[Deploy to EC2 via ECR/build-and-deploy]   | #11 7.798 Downloading httpcore-1.0.9-py3-none-any.whl (78 kB)
[Deploy to EC2 via ECR/build-and-deploy]   | #11 7.828 Downloading httpx-0.28.1-py3-none-any.whl (73 kB)
[Deploy to EC2 via ECR/build-and-deploy]   | #11 7.846 Downloading idna-3.10-py3-none-any.whl (70 kB)
[Deploy to EC2 via ECR/build-and-deploy]   | #11 7.867 Downloading itsdangerous-2.2.0-py3-none-any.whl (16 kB)
[Deploy to EC2 via ECR/build-and-deploy]   | #11 7.893 Downloading jinja2-3.1.6-py3-none-any.whl (134 kB)
[Deploy to EC2 via ECR/build-and-deploy]   | #11 7.915 Downloading jiter-0.10.0-cp313-cp313-manylinux_2_17_aarch64.manylinux2014_aarch64.whl (344 kB)
[Deploy to EC2 via ECR/build-and-deploy]   | #11 7.951 Downloading jsonpatch-1.33-py2.py3-none-any.whl (12 kB)
[Deploy to EC2 via ECR/build-and-deploy]   | #11 7.969 Downloading jsonpointer-3.0.0-py2.py3-none-any.whl (7.6 kB)
[Deploy to EC2 via ECR/build-and-deploy]   | #11 7.993 Downloading kiwisolver-1.4.9-cp313-cp313-manylinux_2_24_aarch64.manylinux_2_28_aarch64.whl (1.3 MB)
[Deploy to EC2 via ECR/build-and-deploy]   | #11 8.014    ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ 1.3/1.3 MB 69.3 MB/s  0:00:00
[Deploy to EC2 via ECR/build-and-deploy]   | #11 8.034 Downloading langchain-0.3.27-py3-none-any.whl (1.0 MB)
[Deploy to EC2 via ECR/build-and-deploy]   | #11 8.053    ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ 1.0/1.0 MB 51.1 MB/s  0:00:00
[Deploy to EC2 via ECR/build-and-deploy]   | #11 8.071 Downloading langchain_core-0.3.75-py3-none-any.whl (443 kB)
[Deploy to EC2 via ECR/build-and-deploy]   | #11 8.094 Downloading langchain_openai-0.3.32-py3-none-any.whl (74 kB)
[Deploy to EC2 via ECR/build-and-deploy]   | #11 8.112 Downloading langchain_text_splitters-0.3.11-py3-none-any.whl (33 kB)
[Deploy to EC2 via ECR/build-and-deploy]   | #11 8.136 Downloading langsmith-0.4.25-py3-none-any.whl (379 kB)
[Deploy to EC2 via ECR/build-and-deploy]   | #11 8.163 Downloading markdown-3.9-py3-none-any.whl (107 kB)
[Deploy to EC2 via ECR/build-and-deploy]   | #11 8.193 Downloading MarkupSafe-3.0.2-cp313-cp313-manylinux_2_17_aarch64.manylinux2014_aarch64.whl (24 kB)
[Deploy to EC2 via ECR/build-and-deploy]   | #11 8.220 Downloading matplotlib-3.10.6-cp313-cp313-manylinux_2_27_aarch64.manylinux_2_28_aarch64.whl (9.5 MB)
[Deploy to EC2 via ECR/build-and-deploy]   | #11 8.368    ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ 9.5/9.5 MB 64.4 MB/s  0:00:00
[Deploy to EC2 via ECR/build-and-deploy]   | #11 8.431 Downloading numpy-2.3.2-cp313-cp313-manylinux_2_27_aarch64.manylinux_2_28_aarch64.whl (14.3 MB)
[Deploy to EC2 via ECR/build-and-deploy]   | #11 8.642    ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ 14.3/14.3 MB 68.8 MB/s  0:00:00
[Deploy to EC2 via ECR/build-and-deploy]   | #11 8.660 Downloading openai-1.106.1-py3-none-any.whl (930 kB)
[Deploy to EC2 via ECR/build-and-deploy]   | #11 8.678    ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ 930.8/930.8 kB 60.3 MB/s  0:00:00
[Deploy to EC2 via ECR/build-and-deploy]   | #11 8.695 Downloading orjson-3.11.3-cp313-cp313-manylinux_2_17_aarch64.manylinux2014_aarch64.whl (123 kB)
[Deploy to EC2 via ECR/build-and-deploy]   | #11 8.714 Downloading packaging-25.0-py3-none-any.whl (66 kB)
[Deploy to EC2 via ECR/build-and-deploy]   | #11 8.735 Downloading pandas-2.3.2-cp313-cp313-manylinux_2_17_aarch64.manylinux2014_aarch64.whl (11.3 MB)
[Deploy to EC2 via ECR/build-and-deploy]   | #11 8.900    ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ 11.3/11.3 MB 73.0 MB/s  0:00:00
[Deploy to EC2 via ECR/build-and-deploy]   | #11 8.927 Downloading pillow-11.3.0-cp313-cp313-manylinux_2_27_aarch64.manylinux_2_28_aarch64.whl (6.0 MB)
[Deploy to EC2 via ECR/build-and-deploy]   | #11 9.066    ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ 6.0/6.0 MB 47.6 MB/s  0:00:00
[Deploy to EC2 via ECR/build-and-deploy]   | #11 9.089 Downloading platformdirs-4.4.0-py3-none-any.whl (18 kB)
[Deploy to EC2 via ECR/build-and-deploy]   | #11 9.111 Downloading protobuf-6.32.0-cp39-abi3-manylinux2014_aarch64.whl (322 kB)
[Deploy to EC2 via ECR/build-and-deploy]   | #11 9.131 Downloading pycparser-2.22-py3-none-any.whl (117 kB)
[Deploy to EC2 via ECR/build-and-deploy]   | #11 9.151 Downloading pydantic-2.11.7-py3-none-any.whl (444 kB)
[Deploy to EC2 via ECR/build-and-deploy]   | #11 9.177 Downloading pydantic_core-2.33.2-cp313-cp313-manylinux_2_17_aarch64.manylinux2014_aarch64.whl (1.9 MB)
[Deploy to EC2 via ECR/build-and-deploy]   | #11 9.204    ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ 1.9/1.9 MB 73.8 MB/s  0:00:00
[Deploy to EC2 via ECR/build-and-deploy]   | #11 9.225 Downloading pyparsing-3.2.3-py3-none-any.whl (111 kB)
[Deploy to EC2 via ECR/build-and-deploy]   | #11 9.247 Downloading python_dateutil-2.9.0.post0-py2.py3-none-any.whl (229 kB)
[Deploy to EC2 via ECR/build-and-deploy]   | #11 9.268 Downloading python_dotenv-1.1.1-py3-none-any.whl (20 kB)
[Deploy to EC2 via ECR/build-and-deploy]   | #11 9.286 Downloading pytz-2025.2-py2.py3-none-any.whl (509 kB)
[Deploy to EC2 via ECR/build-and-deploy]   | #11 9.315 Downloading PyYAML-6.0.2-cp313-cp313-manylinux_2_17_aarch64.manylinux2014_aarch64.whl (733 kB)
[Deploy to EC2 via ECR/build-and-deploy]   | #11 9.325    ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ 733.4/733.4 kB 71.4 MB/s  0:00:00
[Deploy to EC2 via ECR/build-and-deploy]   | #11 9.343 Downloading regex-2025.9.1-cp313-cp313-manylinux2014_aarch64.manylinux_2_17_aarch64.manylinux_2_28_aarch64.whl (797 kB)
[Deploy to EC2 via ECR/build-and-deploy]   | #11 9.358    ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ 797.5/797.5 kB 63.7 MB/s  0:00:00
[Deploy to EC2 via ECR/build-and-deploy]   | #11 9.377 Downloading requests-2.32.5-py3-none-any.whl (64 kB)
[Deploy to EC2 via ECR/build-and-deploy]   | #11 9.400 Downloading requests_toolbelt-1.0.0-py2.py3-none-any.whl (54 kB)
[Deploy to EC2 via ECR/build-and-deploy]   | #11 9.418 Downloading six-1.17.0-py2.py3-none-any.whl (11 kB)
[Deploy to EC2 via ECR/build-and-deploy]   | #11 9.447 Downloading sniffio-1.3.1-py3-none-any.whl (10 kB)
[Deploy to EC2 via ECR/build-and-deploy]   | #11 9.477 Downloading soupsieve-2.8-py3-none-any.whl (36 kB)
[Deploy to EC2 via ECR/build-and-deploy]   | #11 9.500 Downloading sqlalchemy-2.0.43-cp313-cp313-manylinux_2_17_aarch64.manylinux2014_aarch64.whl (3.2 MB)
[Deploy to EC2 via ECR/build-and-deploy]   | #11 9.552    ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ 3.2/3.2 MB 64.6 MB/s  0:00:00
[Deploy to EC2 via ECR/build-and-deploy]   | #11 9.570 Downloading tenacity-9.1.2-py3-none-any.whl (28 kB)
[Deploy to EC2 via ECR/build-and-deploy]   | #11 9.593 Downloading tiktoken-0.11.0-cp313-cp313-manylinux_2_17_aarch64.manylinux2014_aarch64.whl (1.1 MB)
[Deploy to EC2 via ECR/build-and-deploy]   | #11 9.610    ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ 1.1/1.1 MB 63.4 MB/s  0:00:00
[Deploy to EC2 via ECR/build-and-deploy]   | #11 9.627 Downloading tqdm-4.67.1-py3-none-any.whl (78 kB)
[Deploy to EC2 via ECR/build-and-deploy]   | #11 9.649 Downloading typing_inspection-0.4.1-py3-none-any.whl (14 kB)
[Deploy to EC2 via ECR/build-and-deploy]   | #11 9.670 Downloading typing_extensions-4.15.0-py3-none-any.whl (44 kB)
[Deploy to EC2 via ECR/build-and-deploy]   | #11 9.689 Downloading tzdata-2025.2-py2.py3-none-any.whl (347 kB)
[Deploy to EC2 via ECR/build-and-deploy]   | #11 9.715 Downloading urllib3-2.5.0-py3-none-any.whl (129 kB)
[Deploy to EC2 via ECR/build-and-deploy]   | #11 9.736 Downloading webencodings-0.5.1-py2.py3-none-any.whl (11 kB)
[Deploy to EC2 via ECR/build-and-deploy]   | #11 9.760 Downloading websockets-15.0.1-cp313-cp313-manylinux_2_17_aarch64.manylinux2014_aarch64.whl (183 kB)
[Deploy to EC2 via ECR/build-and-deploy]   | #11 9.777 Downloading werkzeug-3.1.3-py3-none-any.whl (224 kB)
[Deploy to EC2 via ECR/build-and-deploy]   | #11 9.800 Downloading yfinance-0.2.65-py2.py3-none-any.whl (119 kB)
[Deploy to EC2 via ECR/build-and-deploy]   | #11 9.835 Downloading zstandard-0.24.0-cp313-cp313-manylinux2014_aarch64.manylinux_2_17_aarch64.whl (5.1 MB)
[Deploy to EC2 via ECR/build-and-deploy]   | #11 9.901    ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ 5.1/5.1 MB 77.6 MB/s  0:00:00
[Deploy to EC2 via ECR/build-and-deploy]   | #11 10.01 Saved /wheels/annotated_types-0.7.0-py3-none-any.whl
[Deploy to EC2 via ECR/build-and-deploy]   | #11 10.01 Saved /wheels/anyio-4.10.0-py3-none-any.whl
[Deploy to EC2 via ECR/build-and-deploy]   | #11 10.01 Saved /wheels/backtrader-1.9.78.123-py2.py3-none-any.whl
[Deploy to EC2 via ECR/build-and-deploy]   | #11 10.01 Saved /wheels/beautifulsoup4-4.13.5-py3-none-any.whl
[Deploy to EC2 via ECR/build-and-deploy]   | #11 10.01 Saved /wheels/bleach-6.2.0-py3-none-any.whl
[Deploy to EC2 via ECR/build-and-deploy]   | #11 10.01 Saved /wheels/blinker-1.9.0-py3-none-any.whl
[Deploy to EC2 via ECR/build-and-deploy]   | #11 10.01 Saved /wheels/certifi-2025.8.3-py3-none-any.whl
[Deploy to EC2 via ECR/build-and-deploy]   | #11 10.01 Saved /wheels/cffi-2.0.0-cp313-cp313-manylinux2014_aarch64.manylinux_2_17_aarch64.whl
[Deploy to EC2 via ECR/build-and-deploy]   | #11 10.01 Saved /wheels/charset_normalizer-3.4.3-cp313-cp313-manylinux2014_aarch64.manylinux_2_17_aarch64.manylinux_2_28_aarch64.whl
[Deploy to EC2 via ECR/build-and-deploy]   | #11 10.01 Saved /wheels/click-8.2.1-py3-none-any.whl
[Deploy to EC2 via ECR/build-and-deploy]   | #11 10.01 Saved /wheels/contourpy-1.3.3-cp313-cp313-manylinux_2_26_aarch64.manylinux_2_28_aarch64.whl
[Deploy to EC2 via ECR/build-and-deploy]   | #11 10.02 Saved /wheels/curl_cffi-0.13.0-cp39-abi3-manylinux_2_17_aarch64.manylinux2014_aarch64.whl
[Deploy to EC2 via ECR/build-and-deploy]   | #11 10.02 Saved /wheels/cycler-0.12.1-py3-none-any.whl
[Deploy to EC2 via ECR/build-and-deploy]   | #11 10.02 Saved /wheels/distro-1.9.0-py3-none-any.whl
[Deploy to EC2 via ECR/build-and-deploy]   | #11 10.02 Saved /wheels/flask-3.1.2-py3-none-any.whl
[Deploy to EC2 via ECR/build-and-deploy]   | #11 10.03 Saved /wheels/fonttools-4.59.2-cp313-cp313-manylinux2014_aarch64.manylinux_2_17_aarch64.manylinux_2_28_aarch64.whl
[Deploy to EC2 via ECR/build-and-deploy]   | #11 10.03 Saved /wheels/frozendict-2.4.6-py313-none-any.whl
[Deploy to EC2 via ECR/build-and-deploy]   | #11 10.03 Saved /wheels/gunicorn-23.0.0-py3-none-any.whl
[Deploy to EC2 via ECR/build-and-deploy]   | #11 10.03 Saved /wheels/h11-0.16.0-py3-none-any.whl
[Deploy to EC2 via ECR/build-and-deploy]   | #11 10.03 Saved /wheels/httpcore-1.0.9-py3-none-any.whl
[Deploy to EC2 via ECR/build-and-deploy]   | #11 10.03 Saved /wheels/httpx-0.28.1-py3-none-any.whl
[Deploy to EC2 via ECR/build-and-deploy]   | #11 10.03 Saved /wheels/idna-3.10-py3-none-any.whl
[Deploy to EC2 via ECR/build-and-deploy]   | #11 10.03 Saved /wheels/itsdangerous-2.2.0-py3-none-any.whl
[Deploy to EC2 via ECR/build-and-deploy]   | #11 10.03 Saved /wheels/jinja2-3.1.6-py3-none-any.whl
[Deploy to EC2 via ECR/build-and-deploy]   | #11 10.03 Saved /wheels/jiter-0.10.0-cp313-cp313-manylinux_2_17_aarch64.manylinux2014_aarch64.whl
[Deploy to EC2 via ECR/build-and-deploy]   | #11 10.03 Saved /wheels/jsonpatch-1.33-py2.py3-none-any.whl
[Deploy to EC2 via ECR/build-and-deploy]   | #11 10.03 Saved /wheels/jsonpointer-3.0.0-py2.py3-none-any.whl
[Deploy to EC2 via ECR/build-and-deploy]   | #11 10.03 Saved /wheels/kiwisolver-1.4.9-cp313-cp313-manylinux_2_24_aarch64.manylinux_2_28_aarch64.whl
[Deploy to EC2 via ECR/build-and-deploy]   | #11 10.03 Saved /wheels/langchain-0.3.27-py3-none-any.whl
[Deploy to EC2 via ECR/build-and-deploy]   | #11 10.03 Saved /wheels/langchain_core-0.3.75-py3-none-any.whl
[Deploy to EC2 via ECR/build-and-deploy]   | #11 10.03 Saved /wheels/langchain_openai-0.3.32-py3-none-any.whl
[Deploy to EC2 via ECR/build-and-deploy]   | #11 10.03 Saved /wheels/langchain_text_splitters-0.3.11-py3-none-any.whl
[Deploy to EC2 via ECR/build-and-deploy]   | #11 10.03 Saved /wheels/langsmith-0.4.25-py3-none-any.whl
[Deploy to EC2 via ECR/build-and-deploy]   | #11 10.04 Saved /wheels/markdown-3.9-py3-none-any.whl
[Deploy to EC2 via ECR/build-and-deploy]   | #11 10.04 Saved /wheels/MarkupSafe-3.0.2-cp313-cp313-manylinux_2_17_aarch64.manylinux2014_aarch64.whl
[Deploy to EC2 via ECR/build-and-deploy]   | #11 10.04 Saved /wheels/matplotlib-3.10.6-cp313-cp313-manylinux_2_27_aarch64.manylinux_2_28_aarch64.whl
[Deploy to EC2 via ECR/build-and-deploy]   | #11 10.06 Saved /wheels/numpy-2.3.2-cp313-cp313-manylinux_2_27_aarch64.manylinux_2_28_aarch64.whl
[Deploy to EC2 via ECR/build-and-deploy]   | #11 10.06 Saved /wheels/openai-1.106.1-py3-none-any.whl
[Deploy to EC2 via ECR/build-and-deploy]   | #11 10.06 Saved /wheels/orjson-3.11.3-cp313-cp313-manylinux_2_17_aarch64.manylinux2014_aarch64.whl
[Deploy to EC2 via ECR/build-and-deploy]   | #11 10.06 Saved /wheels/packaging-25.0-py3-none-any.whl
[Deploy to EC2 via ECR/build-and-deploy]   | #11 10.07 Saved /wheels/pandas-2.3.2-cp313-cp313-manylinux_2_17_aarch64.manylinux2014_aarch64.whl
[Deploy to EC2 via ECR/build-and-deploy]   | #11 10.08 Saved /wheels/pillow-11.3.0-cp313-cp313-manylinux_2_27_aarch64.manylinux_2_28_aarch64.whl
[Deploy to EC2 via ECR/build-and-deploy]   | #11 10.08 Saved /wheels/platformdirs-4.4.0-py3-none-any.whl
[Deploy to EC2 via ECR/build-and-deploy]   | #11 10.08 Saved /wheels/protobuf-6.32.0-cp39-abi3-manylinux2014_aarch64.whl
[Deploy to EC2 via ECR/build-and-deploy]   | #11 10.08 Saved /wheels/pycparser-2.22-py3-none-any.whl
[Deploy to EC2 via ECR/build-and-deploy]   | #11 10.08 Saved /wheels/pydantic-2.11.7-py3-none-any.whl
[Deploy to EC2 via ECR/build-and-deploy]   | #11 10.08 Saved /wheels/pydantic_core-2.33.2-cp313-cp313-manylinux_2_17_aarch64.manylinux2014_aarch64.whl
[Deploy to EC2 via ECR/build-and-deploy]   | #11 10.08 Saved /wheels/pyparsing-3.2.3-py3-none-any.whl
[Deploy to EC2 via ECR/build-and-deploy]   | #11 10.08 Saved /wheels/python_dateutil-2.9.0.post0-py2.py3-none-any.whl
[Deploy to EC2 via ECR/build-and-deploy]   | #11 10.08 Saved /wheels/python_dotenv-1.1.1-py3-none-any.whl
[Deploy to EC2 via ECR/build-and-deploy]   | #11 10.08 Saved /wheels/pytz-2025.2-py2.py3-none-any.whl
[Deploy to EC2 via ECR/build-and-deploy]   | #11 10.08 Saved /wheels/PyYAML-6.0.2-cp313-cp313-manylinux_2_17_aarch64.manylinux2014_aarch64.whl
[Deploy to EC2 via ECR/build-and-deploy]   | #11 10.09 Saved /wheels/regex-2025.9.1-cp313-cp313-manylinux2014_aarch64.manylinux_2_17_aarch64.manylinux_2_28_aarch64.whl
[Deploy to EC2 via ECR/build-and-deploy]   | #11 10.09 Saved /wheels/requests-2.32.5-py3-none-any.whl
[Deploy to EC2 via ECR/build-and-deploy]   | #11 10.09 Saved /wheels/requests_toolbelt-1.0.0-py2.py3-none-any.whl
[Deploy to EC2 via ECR/build-and-deploy]   | #11 10.09 Saved /wheels/six-1.17.0-py2.py3-none-any.whl
[Deploy to EC2 via ECR/build-and-deploy]   | #11 10.09 Saved /wheels/sniffio-1.3.1-py3-none-any.whl
[Deploy to EC2 via ECR/build-and-deploy]   | #11 10.09 Saved /wheels/soupsieve-2.8-py3-none-any.whl
[Deploy to EC2 via ECR/build-and-deploy]   | #11 10.09 Saved /wheels/sqlalchemy-2.0.43-cp313-cp313-manylinux_2_17_aarch64.manylinux2014_aarch64.whl
[Deploy to EC2 via ECR/build-and-deploy]   | #11 10.09 Saved /wheels/tenacity-9.1.2-py3-none-any.whl
[Deploy to EC2 via ECR/build-and-deploy]   | #11 10.09 Saved /wheels/tiktoken-0.11.0-cp313-cp313-manylinux_2_17_aarch64.manylinux2014_aarch64.whl
[Deploy to EC2 via ECR/build-and-deploy]   | #11 10.09 Saved /wheels/tqdm-4.67.1-py3-none-any.whl
[Deploy to EC2 via ECR/build-and-deploy]   | #11 10.09 Saved /wheels/typing_inspection-0.4.1-py3-none-any.whl
[Deploy to EC2 via ECR/build-and-deploy]   | #11 10.09 Saved /wheels/typing_extensions-4.15.0-py3-none-any.whl
[Deploy to EC2 via ECR/build-and-deploy]   | #11 10.09 Saved /wheels/tzdata-2025.2-py2.py3-none-any.whl
[Deploy to EC2 via ECR/build-and-deploy]   | #11 10.09 Saved /wheels/urllib3-2.5.0-py3-none-any.whl
[Deploy to EC2 via ECR/build-and-deploy]   | #11 10.09 Saved /wheels/webencodings-0.5.1-py2.py3-none-any.whl
[Deploy to EC2 via ECR/build-and-deploy]   | #11 10.09 Saved /wheels/websockets-15.0.1-cp313-cp313-manylinux_2_17_aarch64.manylinux2014_aarch64.whl
[Deploy to EC2 via ECR/build-and-deploy]   | #11 10.10 Saved /wheels/werkzeug-3.1.3-py3-none-any.whl
[Deploy to EC2 via ECR/build-and-deploy]   | #11 10.10 Saved /wheels/yfinance-0.2.65-py2.py3-none-any.whl
[Deploy to EC2 via ECR/build-and-deploy]   | #11 10.10 Saved /wheels/zstandard-0.24.0-cp313-cp313-manylinux2014_aarch64.manylinux_2_17_aarch64.whl
[Deploy to EC2 via ECR/build-and-deploy]   | #11 10.10 Building wheels for collected packages: multitasking, peewee
[Deploy to EC2 via ECR/build-and-deploy]   | #11 10.10   DEPRECATION: Building 'multitasking' using the legacy setup.py bdist_wheel mechanism, which will be removed in a future version. pip 25.3 will enforce this behaviour change. A possible replacement is to use the standardized build interface by setting the `--use-pep517` option, (possibly combined with `--no-build-isolation`), or adding a `pyproject.toml` file to the source tree of 'multitasking'. Discussion can be found at https://github.com/pypa/pip/issues/6334
[Deploy to EC2 via ECR/build-and-deploy]   | #11 10.10   Building wheel for multitasking (setup.py): started
[Deploy to EC2 via ECR/build-and-deploy]   | #11 10.28   Building wheel for multitasking (setup.py): finished with status 'done'
[Deploy to EC2 via ECR/build-and-deploy]   | #11 10.28   Created wheel for multitasking: filename=multitasking-0.0.12-py3-none-any.whl size=15636 sha256=30d279867700ee0a9ebd6dd055eacbfd867b6d94676693d01711198ad50d8602
[Deploy to EC2 via ECR/build-and-deploy]   | #11 10.28   Stored in directory: /tmp/pip-ephem-wheel-cache-jeia5tzm/wheels/1e/df/0f/e2bbb22d689b30c681feb5410ab64a2523437b34c8ecfc6476
[Deploy to EC2 via ECR/build-and-deploy]   | #11 10.28   Building wheel for peewee (pyproject.toml): started
[Deploy to EC2 via ECR/build-and-deploy]   | #11 10.44   Building wheel for peewee (pyproject.toml): finished with status 'done'
[Deploy to EC2 via ECR/build-and-deploy]   | #11 10.44   Created wheel for peewee: filename=peewee-3.18.2-py3-none-any.whl size=139106 sha256=77959a3a201ebe524c39c6dc6cbc35f0760befd640ab22cac68f6f45f536c2f9
[Deploy to EC2 via ECR/build-and-deploy]   | #11 10.44   Stored in directory: /tmp/pip-ephem-wheel-cache-jeia5tzm/wheels/1c/48/cc/00b7d0e7defa21a58915654917c89eaedd32a6e614d8e4ad92
[Deploy to EC2 via ECR/build-and-deploy]   | #11 10.44 Successfully built multitasking peewee
[Deploy to EC2 via ECR/build-and-deploy]   | #11 DONE 11.2s
[Deploy to EC2 via ECR/build-and-deploy]   | 
[Deploy to EC2 via ECR/build-and-deploy]   | #12 [stage-1 4/6] COPY --from=builder /wheels /wheels
[Deploy to EC2 via ECR/build-and-deploy]   | #12 DONE 0.1s
[Deploy to EC2 via ECR/build-and-deploy]   | 
[Deploy to EC2 via ECR/build-and-deploy]   | #13 [stage-1 5/6] RUN pip install --no-cache /wheels/*
[Deploy to EC2 via ECR/build-and-deploy]   | #13 0.936 Processing /wheels/MarkupSafe-3.0.2-cp313-cp313-manylinux_2_17_aarch64.manylinux2014_aarch64.whl
[Deploy to EC2 via ECR/build-and-deploy]   | #13 0.939 Processing /wheels/PyYAML-6.0.2-cp313-cp313-manylinux_2_17_aarch64.manylinux2014_aarch64.whl
[Deploy to EC2 via ECR/build-and-deploy]   | #13 0.941 Processing /wheels/annotated_types-0.7.0-py3-none-any.whl
[Deploy to EC2 via ECR/build-and-deploy]   | #13 0.942 Processing /wheels/anyio-4.10.0-py3-none-any.whl
[Deploy to EC2 via ECR/build-and-deploy]   | #13 0.943 Processing /wheels/backtrader-1.9.78.123-py2.py3-none-any.whl
[Deploy to EC2 via ECR/build-and-deploy]   | #13 0.945 Processing /wheels/beautifulsoup4-4.13.5-py3-none-any.whl
[Deploy to EC2 via ECR/build-and-deploy]   | #13 0.947 Processing /wheels/bleach-6.2.0-py3-none-any.whl
[Deploy to EC2 via ECR/build-and-deploy]   | #13 0.949 Processing /wheels/blinker-1.9.0-py3-none-any.whl
[Deploy to EC2 via ECR/build-and-deploy]   | #13 0.950 Processing /wheels/certifi-2025.8.3-py3-none-any.whl
[Deploy to EC2 via ECR/build-and-deploy]   | #13 0.950 Processing /wheels/cffi-2.0.0-cp313-cp313-manylinux2014_aarch64.manylinux_2_17_aarch64.whl
[Deploy to EC2 via ECR/build-and-deploy]   | #13 0.951 Processing /wheels/charset_normalizer-3.4.3-cp313-cp313-manylinux2014_aarch64.manylinux_2_17_aarch64.manylinux_2_28_aarch64.whl
[Deploy to EC2 via ECR/build-and-deploy]   | #13 0.953 Processing /wheels/click-8.2.1-py3-none-any.whl
[Deploy to EC2 via ECR/build-and-deploy]   | #13 0.954 Processing /wheels/contourpy-1.3.3-cp313-cp313-manylinux_2_26_aarch64.manylinux_2_28_aarch64.whl
[Deploy to EC2 via ECR/build-and-deploy]   | #13 0.956 Processing /wheels/curl_cffi-0.13.0-cp39-abi3-manylinux_2_17_aarch64.manylinux2014_aarch64.whl
[Deploy to EC2 via ECR/build-and-deploy]   | #13 0.965 Processing /wheels/cycler-0.12.1-py3-none-any.whl
[Deploy to EC2 via ECR/build-and-deploy]   | #13 0.966 Processing /wheels/distro-1.9.0-py3-none-any.whl
[Deploy to EC2 via ECR/build-and-deploy]   | #13 0.967 Processing /wheels/flask-3.1.2-py3-none-any.whl
[Deploy to EC2 via ECR/build-and-deploy]   | #13 0.968 Processing /wheels/fonttools-4.59.2-cp313-cp313-manylinux2014_aarch64.manylinux_2_17_aarch64.manylinux_2_28_aarch64.whl
[Deploy to EC2 via ECR/build-and-deploy]   | #13 0.980 Processing /wheels/frozendict-2.4.6-py313-none-any.whl
[Deploy to EC2 via ECR/build-and-deploy]   | #13 0.981 Processing /wheels/gunicorn-23.0.0-py3-none-any.whl
[Deploy to EC2 via ECR/build-and-deploy]   | #13 0.983 Processing /wheels/h11-0.16.0-py3-none-any.whl
[Deploy to EC2 via ECR/build-and-deploy]   | #13 0.984 Processing /wheels/httpcore-1.0.9-py3-none-any.whl
[Deploy to EC2 via ECR/build-and-deploy]   | #13 0.985 Processing /wheels/httpx-0.28.1-py3-none-any.whl
[Deploy to EC2 via ECR/build-and-deploy]   | #13 0.987 Processing /wheels/idna-3.10-py3-none-any.whl
[Deploy to EC2 via ECR/build-and-deploy]   | #13 0.988 Processing /wheels/itsdangerous-2.2.0-py3-none-any.whl
[Deploy to EC2 via ECR/build-and-deploy]   | #13 0.988 Processing /wheels/jinja2-3.1.6-py3-none-any.whl
[Deploy to EC2 via ECR/build-and-deploy]   | #13 0.989 Processing /wheels/jiter-0.10.0-cp313-cp313-manylinux_2_17_aarch64.manylinux2014_aarch64.whl
[Deploy to EC2 via ECR/build-and-deploy]   | #13 0.990 Processing /wheels/jsonpatch-1.33-py2.py3-none-any.whl
[Deploy to EC2 via ECR/build-and-deploy]   | #13 0.991 Processing /wheels/jsonpointer-3.0.0-py2.py3-none-any.whl
[Deploy to EC2 via ECR/build-and-deploy]   | #13 0.992 Processing /wheels/kiwisolver-1.4.9-cp313-cp313-manylinux_2_24_aarch64.manylinux_2_28_aarch64.whl
[Deploy to EC2 via ECR/build-and-deploy]   | #13 0.994 Processing /wheels/langchain-0.3.27-py3-none-any.whl
[Deploy to EC2 via ECR/build-and-deploy]   | #13 1.001 Processing /wheels/langchain_core-0.3.75-py3-none-any.whl
[Deploy to EC2 via ECR/build-and-deploy]   | #13 1.003 Processing /wheels/langchain_openai-0.3.32-py3-none-any.whl
[Deploy to EC2 via ECR/build-and-deploy]   | #13 1.004 Processing /wheels/langchain_text_splitters-0.3.11-py3-none-any.whl
[Deploy to EC2 via ECR/build-and-deploy]   | #13 1.005 Processing /wheels/langsmith-0.4.25-py3-none-any.whl
[Deploy to EC2 via ECR/build-and-deploy]   | #13 1.007 Processing /wheels/markdown-3.9-py3-none-any.whl
[Deploy to EC2 via ECR/build-and-deploy]   | #13 1.009 Processing /wheels/matplotlib-3.10.6-cp313-cp313-manylinux_2_27_aarch64.manylinux_2_28_aarch64.whl
[Deploy to EC2 via ECR/build-and-deploy]   | #13 1.018 Processing /wheels/multitasking-0.0.12-py3-none-any.whl
[Deploy to EC2 via ECR/build-and-deploy]   | #13 1.019 Processing /wheels/numpy-2.3.2-cp313-cp313-manylinux_2_27_aarch64.manylinux_2_28_aarch64.whl
[Deploy to EC2 via ECR/build-and-deploy]   | #13 1.034 Processing /wheels/openai-1.106.1-py3-none-any.whl
[Deploy to EC2 via ECR/build-and-deploy]   | #13 1.039 Processing /wheels/orjson-3.11.3-cp313-cp313-manylinux_2_17_aarch64.manylinux2014_aarch64.whl
[Deploy to EC2 via ECR/build-and-deploy]   | #13 1.041 Processing /wheels/packaging-25.0-py3-none-any.whl
[Deploy to EC2 via ECR/build-and-deploy]   | #13 1.042 Processing /wheels/pandas-2.3.2-cp313-cp313-manylinux_2_17_aarch64.manylinux2014_aarch64.whl
[Deploy to EC2 via ECR/build-and-deploy]   | #13 1.068 Processing /wheels/peewee-3.18.2-py3-none-any.whl
[Deploy to EC2 via ECR/build-and-deploy]   | #13 1.069 Processing /wheels/pillow-11.3.0-cp313-cp313-manylinux_2_27_aarch64.manylinux_2_28_aarch64.whl
[Deploy to EC2 via ECR/build-and-deploy]   | #13 1.076 Processing /wheels/platformdirs-4.4.0-py3-none-any.whl
[Deploy to EC2 via ECR/build-and-deploy]   | #13 1.078 Processing /wheels/protobuf-6.32.0-cp39-abi3-manylinux2014_aarch64.whl
[Deploy to EC2 via ECR/build-and-deploy]   | #13 1.079 Processing /wheels/pycparser-2.22-py3-none-any.whl
[Deploy to EC2 via ECR/build-and-deploy]   | #13 1.080 Processing /wheels/pydantic-2.11.7-py3-none-any.whl
[Deploy to EC2 via ECR/build-and-deploy]   | #13 1.082 Processing /wheels/pydantic_core-2.33.2-cp313-cp313-manylinux_2_17_aarch64.manylinux2014_aarch64.whl
[Deploy to EC2 via ECR/build-and-deploy]   | #13 1.085 Processing /wheels/pyparsing-3.2.3-py3-none-any.whl
[Deploy to EC2 via ECR/build-and-deploy]   | #13 1.085 Processing /wheels/python_dateutil-2.9.0.post0-py2.py3-none-any.whl
[Deploy to EC2 via ECR/build-and-deploy]   | #13 1.086 Processing /wheels/python_dotenv-1.1.1-py3-none-any.whl
[Deploy to EC2 via ECR/build-and-deploy]   | #13 1.088 Processing /wheels/pytz-2025.2-py2.py3-none-any.whl
[Deploy to EC2 via ECR/build-and-deploy]   | #13 1.091 Processing /wheels/regex-2025.9.1-cp313-cp313-manylinux2014_aarch64.manylinux_2_17_aarch64.manylinux_2_28_aarch64.whl
[Deploy to EC2 via ECR/build-and-deploy]   | #13 1.093 Processing /wheels/requests-2.32.5-py3-none-any.whl
[Deploy to EC2 via ECR/build-and-deploy]   | #13 1.095 Processing /wheels/requests_toolbelt-1.0.0-py2.py3-none-any.whl
[Deploy to EC2 via ECR/build-and-deploy]   | #13 1.096 Processing /wheels/six-1.17.0-py2.py3-none-any.whl
[Deploy to EC2 via ECR/build-and-deploy]   | #13 1.097 Processing /wheels/sniffio-1.3.1-py3-none-any.whl
[Deploy to EC2 via ECR/build-and-deploy]   | #13 1.098 Processing /wheels/soupsieve-2.8-py3-none-any.whl
[Deploy to EC2 via ECR/build-and-deploy]   | #13 1.099 Processing /wheels/sqlalchemy-2.0.43-cp313-cp313-manylinux_2_17_aarch64.manylinux2014_aarch64.whl
[Deploy to EC2 via ECR/build-and-deploy]   | #13 1.106 Processing /wheels/tenacity-9.1.2-py3-none-any.whl
[Deploy to EC2 via ECR/build-and-deploy]   | #13 1.107 Processing /wheels/tiktoken-0.11.0-cp313-cp313-manylinux_2_17_aarch64.manylinux2014_aarch64.whl
[Deploy to EC2 via ECR/build-and-deploy]   | #13 1.109 Processing /wheels/tqdm-4.67.1-py3-none-any.whl
[Deploy to EC2 via ECR/build-and-deploy]   | #13 1.112 Processing /wheels/typing_extensions-4.15.0-py3-none-any.whl
[Deploy to EC2 via ECR/build-and-deploy]   | #13 1.113 Processing /wheels/typing_inspection-0.4.1-py3-none-any.whl
[Deploy to EC2 via ECR/build-and-deploy]   | #13 1.114 Processing /wheels/tzdata-2025.2-py2.py3-none-any.whl
[Deploy to EC2 via ECR/build-and-deploy]   | #13 1.117 Processing /wheels/urllib3-2.5.0-py3-none-any.whl
[Deploy to EC2 via ECR/build-and-deploy]   | #13 1.118 Processing /wheels/webencodings-0.5.1-py2.py3-none-any.whl
[Deploy to EC2 via ECR/build-and-deploy]   | #13 1.119 Processing /wheels/websockets-15.0.1-cp313-cp313-manylinux_2_17_aarch64.manylinux2014_aarch64.whl
[Deploy to EC2 via ECR/build-and-deploy]   | #13 1.120 Processing /wheels/werkzeug-3.1.3-py3-none-any.whl
[Deploy to EC2 via ECR/build-and-deploy]   | #13 1.121 Processing /wheels/yfinance-0.2.65-py2.py3-none-any.whl
[Deploy to EC2 via ECR/build-and-deploy]   | #13 1.122 Processing /wheels/zstandard-0.24.0-cp313-cp313-manylinux2014_aarch64.manylinux_2_17_aarch64.whl
[Deploy to EC2 via ECR/build-and-deploy]   | #13 1.352 Collecting greenlet>=1 (from sqlalchemy==2.0.43)
[Deploy to EC2 via ECR/build-and-deploy]   | #13 1.418   Downloading greenlet-3.2.4-cp313-cp313-manylinux2014_aarch64.manylinux_2_17_aarch64.whl.metadata (4.1 kB)
[Deploy to EC2 via ECR/build-and-deploy]   | #13 1.477 Downloading greenlet-3.2.4-cp313-cp313-manylinux2014_aarch64.manylinux_2_17_aarch64.whl (641 kB)
[Deploy to EC2 via ECR/build-and-deploy]   | #13 1.533    ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ 641.1/641.1 kB 31.1 MB/s  0:00:00
[Deploy to EC2 via ECR/build-and-deploy]   | #13 1.638 Installing collected packages: webencodings, pytz, peewee, multitasking, backtrader, zstandard, websockets, urllib3, tzdata, typing-extensions, tqdm, tenacity, soupsieve, sniffio, six, regex, pyyaml, python-dotenv, pyparsing, pycparser, protobuf, platformdirs, pillow, packaging, orjson, numpy, markupsafe, markdown, kiwisolver, jsonpointer, jiter, itsdangerous, idna, h11, greenlet, frozendict, fonttools, distro, cycler, click, charset-normalizer, certifi, blinker, bleach, annotated-types, werkzeug, typing-inspection, sqlalchemy, requests, python-dateutil, pydantic-core, jsonpatch, jinja2, httpcore, gunicorn, contourpy, cffi, beautifulsoup4, anyio, tiktoken, requests-toolbelt, pydantic, pandas, matplotlib, httpx, flask, curl-cffi, yfinance, openai, langsmith, langchain-core, langchain-text-splitters, langchain-openai, langchain
[Deploy to EC2 via ECR/build-and-deploy]   | #13 12.45 
[Deploy to EC2 via ECR/build-and-deploy]   | #13 12.45 Successfully installed annotated-types-0.7.0 anyio-4.10.0 backtrader-1.9.78.123 beautifulsoup4-4.13.5 bleach-6.2.0 blinker-1.9.0 certifi-2025.8.3 cffi-2.0.0 charset-normalizer-3.4.3 click-8.2.1 contourpy-1.3.3 curl-cffi-0.13.0 cycler-0.12.1 distro-1.9.0 flask-3.1.2 fonttools-4.59.2 frozendict-2.4.6 greenlet-3.2.4 gunicorn-23.0.0 h11-0.16.0 httpcore-1.0.9 httpx-0.28.1 idna-3.10 itsdangerous-2.2.0 jinja2-3.1.6 jiter-0.10.0 jsonpatch-1.33 jsonpointer-3.0.0 kiwisolver-1.4.9 langchain-0.3.27 langchain-core-0.3.75 langchain-openai-0.3.32 langchain-text-splitters-0.3.11 langsmith-0.4.25 markdown-3.9 markupsafe-3.0.2 matplotlib-3.10.6 multitasking-0.0.12 numpy-2.3.2 openai-1.106.1 orjson-3.11.3 packaging-25.0 pandas-2.3.2 peewee-3.18.2 pillow-11.3.0 platformdirs-4.4.0 protobuf-6.32.0 pycparser-2.22 pydantic-2.11.7 pydantic-core-2.33.2 pyparsing-3.2.3 python-dateutil-2.9.0.post0 python-dotenv-1.1.1 pytz-2025.2 pyyaml-6.0.2 regex-2025.9.1 requests-2.32.5 requests-toolbelt-1.0.0 six-1.17.0 sniffio-1.3.1 soupsieve-2.8 sqlalchemy-2.0.43 tenacity-9.1.2 tiktoken-0.11.0 tqdm-4.67.1 typing-extensions-4.15.0 typing-inspection-0.4.1 tzdata-2025.2 urllib3-2.5.0 webencodings-0.5.1 websockets-15.0.1 werkzeug-3.1.3 yfinance-0.2.65 zstandard-0.24.0
[Deploy to EC2 via ECR/build-and-deploy]   | #13 12.45 WARNING: Running pip as the 'root' user can result in broken permissions and conflicting behaviour with the system package manager, possibly rendering your system unusable. It is recommended to use a virtual environment instead: https://pip.pypa.io/warnings/venv. Use the --root-user-action option if you know what you are doing and want to suppress this warning.
[Deploy to EC2 via ECR/build-and-deploy]   | #13 DONE 13.2s
[Deploy to EC2 via ECR/build-and-deploy]   | 
[Deploy to EC2 via ECR/build-and-deploy]   | #14 [stage-1 6/6] COPY . .
[Deploy to EC2 via ECR/build-and-deploy]   | #14 DONE 0.0s
[Deploy to EC2 via ECR/build-and-deploy]   | 
[Deploy to EC2 via ECR/build-and-deploy]   | #15 exporting to image
[Deploy to EC2 via ECR/build-and-deploy]   | #15 exporting layers
[Deploy to EC2 via ECR/build-and-deploy]   | #15 exporting layers 1.1s done
[Deploy to EC2 via ECR/build-and-deploy]   | #15 writing image sha256:edb8f5f017eff59a99989ca6476f7fc44580b4a34b91fa95bcd8131bc8939824 done
[Deploy to EC2 via ECR/build-and-deploy]   | #15 naming to docker.io/library/***:local done
[Deploy to EC2 via ECR/build-and-deploy]   | #15 DONE 1.1s
[Deploy to EC2 via ECR/build-and-deploy]   ‚úÖ  Success - Main Local Docker build (act only) [29.88686975s]
[Deploy to EC2 via ECR/build-and-deploy]   ‚öô  ::set-env:: IMAGE_URI=***:local
[Deploy to EC2 via ECR/build-and-deploy] ‚≠ê Run Post actions/setup-python@v5
[Deploy to EC2 via ECR/build-and-deploy]   üê≥  docker exec cmd=[/opt/acttoolcache/node/18.20.8/arm64/bin/node /var/run/act/actions/actions-setup-python@v5/dist/cache-save/index.js] user= workdir=
[Deploy to EC2 via ECR/build-and-deploy]   ‚úÖ  Success - Post actions/setup-python@v5 [213.081833ms]
[Deploy to EC2 via ECR/build-and-deploy] ‚≠ê Run Complete job
[Deploy to EC2 via ECR/build-and-deploy] Cleaning up container for job build-and-deploy
[Deploy to EC2 via ECR/build-and-deploy]   ‚úÖ  Success - Complete job
[Deploy to EC2 via ECR/build-and-deploy] üèÅ  Job succeeded
